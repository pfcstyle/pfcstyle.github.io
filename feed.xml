<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://pfcstyle.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pfcstyle.github.io/" rel="alternate" type="text/html" /><updated>2021-02-08T18:36:37+08:00</updated><id>https://pfcstyle.github.io/feed.xml</id><title type="html">01手记</title><subtitle>Will的个人手记</subtitle><author><name>Yawei Wang</name></author><entry><title type="html">kubernetes 教程（一）</title><link href="https://pfcstyle.github.io/2021/02/08/kubernetes-1-core-concept/" rel="alternate" type="text/html" title="kubernetes 教程（一）" /><published>2021-02-08T00:00:00+08:00</published><updated>2021-02-08T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/08/kubernetes-1-core-concept</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/08/kubernetes-1-core-concept/">&lt;h1 id=&quot;kubernetes能提供什么&quot;&gt;Kubernetes能提供什么&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;服务发现和负载均衡&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;存储编排&lt;/p&gt;

    &lt;p&gt;Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;自动部署和回滚&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自动完成装箱计算&lt;/p&gt;

    &lt;p&gt;Kubernetes 允许你指定每个容器所需 CPU 和内存（RAM）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自我修复&lt;/p&gt;

    &lt;p&gt;Kubernetes 重新启动失败的容器、替换容器、杀死不响应用户定义的 运行状况检查的容器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;密钥与配置管理&lt;/p&gt;

    &lt;p&gt;Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;kubernetes集群部署图&quot;&gt;Kubernetes集群部署图&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2021-02-08/k8s-cluster-deploy.jpg&quot; alt=&quot;k8s-cluster-deploy&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pod：最小的调度分配单元，可包含一组容器和卷组成，同一个Pod的容器组共享同一个网络命名空间;&lt;/li&gt;
  &lt;li&gt;ReplicationController/ReplicateSet: 用于控制Pod副本数量，保证Pod始终运行;&lt;/li&gt;
  &lt;li&gt;StatefulSet：类似ReplicateSet，但StatefulSet提供Pod状态保持，在重新调度后保留他们的标识和状态，适合数据库等有状态应用场景;&lt;/li&gt;
  &lt;li&gt;DeamonSet： 保证在所有群集节点上运行一个Pod;&lt;/li&gt;
  &lt;li&gt;Service: 为一组功能相同的Pods提供单一不变的接入点，解耦Pods伸缩能力;&lt;/li&gt;
  &lt;li&gt;Deployment：类似ReplicationController/ReplicateSet， 增加滚动升降级策略和能力;&lt;/li&gt;
  &lt;li&gt;ConfigMap：配置选项，支持配置从Pod解耦分离;&lt;/li&gt;
  &lt;li&gt;Secret：类似ConfigMap，用于敏感数据保存;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;重要组件&quot;&gt;重要组件&lt;/h1&gt;

&lt;p&gt;集群中包含多个节点，分为主节点和工作节点。&lt;/p&gt;

&lt;p&gt;工作节点上用于负载应用的单元称为Pod,主节点用来管理工作节点和Pod.&lt;/p&gt;

&lt;h2 id=&quot;控制面板组件主节点&quot;&gt;控制面板组件（主节点）&lt;/h2&gt;
&lt;p&gt;对集群做出全局决策，以及检测和响应集群事件。每一个主节点同时也是node&lt;/p&gt;
&lt;h3 id=&quot;kube-apiserver&quot;&gt;kube-apiserver&lt;/h3&gt;
&lt;p&gt;Kubernetes的api服务，可以用来动态操作kubernetes，支持伸缩扩展。&lt;/p&gt;
&lt;h3 id=&quot;etcd&quot;&gt;etcd&lt;/h3&gt;
&lt;p&gt;保存Kubernetes集群数据的后台键值数据库&lt;/p&gt;
&lt;h3 id=&quot;kube-scheduler&quot;&gt;kube-scheduler&lt;/h3&gt;
&lt;p&gt;用来调度Pod及Pod的资源&lt;/p&gt;
&lt;h3 id=&quot;kube-controller-manager&quot;&gt;kube-controller-manager&lt;/h3&gt;
&lt;p&gt;每一个控制器应该是一个进程，但为了降低复杂性，他们被编译到一个应用中，并运行在一个进程中&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;节点控制器（Node Controller）: 负责在节点出现故障时进行通知和响应。&lt;/li&gt;
  &lt;li&gt;副本控制器（Replication Controller）: 负责为系统中的每个副本控制器对象维护正确数量的 Pod。&lt;/li&gt;
  &lt;li&gt;端点控制器（Endpoints Controller）: 填充端点(Endpoints)对象(即加入 Service 与 Pod)。&lt;/li&gt;
  &lt;li&gt;服务帐户和令牌控制器（Service Account &amp;amp; Token Controllers）: 为新的命名空间创建默认帐户和 API 访问令牌
    &lt;h3 id=&quot;cloud-controller-manager&quot;&gt;cloud-controller-manager&lt;/h3&gt;
    &lt;p&gt;用于链接管理云提供商的应用编程接口，本地集群不需要&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;节点控制器（Node Controller）: 用于在节点终止响应后检查云提供商以确定节点是否已被删除&lt;/li&gt;
  &lt;li&gt;路由控制器（Route Controller）: 用于在底层云基础架构中设置路由&lt;/li&gt;
  &lt;li&gt;服务控制器（Service Controller）: 用于创建、更新和删除云提供商负载均衡器&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;node组件&quot;&gt;Node组件&lt;/h2&gt;
&lt;h3 id=&quot;kubelet&quot;&gt;Kubelet&lt;/h3&gt;
&lt;p&gt;每个工作节点上的代理，通过接收PodSpecs来管理容器，并保证安全的运行在Pod中&lt;/p&gt;
&lt;h3 id=&quot;kube-proxy&quot;&gt;Kube-proxy&lt;/h3&gt;
&lt;p&gt;每个工作节点上运行的网络代理，维护节点网络规则&lt;/p&gt;
&lt;h3 id=&quot;container-runtime&quot;&gt;Container Runtime&lt;/h3&gt;
&lt;p&gt;负责运行容器的软件，如Docker、Containerd等任何实现Kubernetes CRI（容器运行环境接口）的容器软件&lt;/p&gt;

&lt;h2 id=&quot;插件&quot;&gt;插件&lt;/h2&gt;
&lt;p&gt;使用Kubernetes资源提供集群级别功能，其命名空间域属于kubu-system命名空间。常用插件：&lt;/p&gt;
&lt;h3 id=&quot;dns&quot;&gt;DNS&lt;/h3&gt;
&lt;p&gt;几乎所有Kubernetes集群都应该有集群DNS用于做域名服务&lt;/p&gt;
&lt;h3 id=&quot;仪表盘&quot;&gt;仪表盘&lt;/h3&gt;
&lt;p&gt;Kubernetes集群通用的、基于WEb的用户界面，可以管理集群&lt;/p&gt;
&lt;h3 id=&quot;容器资源监控&quot;&gt;容器资源监控&lt;/h3&gt;
&lt;h3 id=&quot;集群级别日志&quot;&gt;集群级别日志&lt;/h3&gt;</content><author><name>Yawei</name></author><category term="kubernetes" /><summary type="html">Kubernetes能提供什么 服务发现和负载均衡 存储编排</summary></entry><entry><title type="html">kubernetes 组件版本偏差策略</title><link href="https://pfcstyle.github.io/2021/02/08/kubernetes-components-version-strategy/" rel="alternate" type="text/html" title="kubernetes 组件版本偏差策略" /><published>2021-02-08T00:00:00+08:00</published><updated>2021-02-08T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/08/kubernetes-components-version-strategy</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/08/kubernetes-components-version-strategy/">&lt;h1 id=&quot;版本偏差&quot;&gt;版本偏差&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;多个 kube-apiserver 实例小版本号最多差1&lt;/li&gt;
  &lt;li&gt;kubelet 版本号不能高于 kube-apiserver，最多可以比 kube-apiserver 低两个小版本。&lt;/li&gt;
  &lt;li&gt;kube-controller-manager、kube-scheduler 和 cloud-controller-manager 版本不能高于 kube-apiserver 版本号&lt;/li&gt;
  &lt;li&gt;kubectl 可以比 kube-apiserver 高一个小版本，也可以低一个小版本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;组件升级顺序&quot;&gt;组件升级顺序&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;kube-apiserver&lt;/li&gt;
  &lt;li&gt;kube-controller-manager、kube-scheduler 和 cloud-controller-manager&lt;/li&gt;
  &lt;li&gt;Kubelet&lt;/li&gt;
  &lt;li&gt;Kube-proxy&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="kubernetes" /><summary type="html">版本偏差</summary></entry><entry><title type="html">kubernetes Daemonset</title><link href="https://pfcstyle.github.io/2021/02/08/kubernetes-daemonset/" rel="alternate" type="text/html" title="kubernetes Daemonset" /><published>2021-02-08T00:00:00+08:00</published><updated>2021-02-08T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/08/kubernetes-daemonset</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/08/kubernetes-daemonset/">&lt;p&gt;守护进程集包含存储进程、日志收集进程、节点监控进程、和Pods管理（创建与回收）进程。&lt;/p&gt;

&lt;p&gt;DaemonSet可以只有一个，也可以根据不同的daemon划分为多个。这些进程都以Pods的形式运行&lt;/p&gt;

&lt;h2 id=&quot;spec&quot;&gt;Spec&lt;/h2&gt;
&lt;h3 id=&quot;必需字段&quot;&gt;必需字段&lt;/h3&gt;
&lt;p&gt;apiVersion, kind, metadata等通用字段&lt;/p&gt;

&lt;p&gt;template, 这是一个pod template,其配置与pod几乎完全一样，除了没有apiVersion和kind&lt;/p&gt;

&lt;p&gt;selector,1.8开始，必须指定来匹配template的label，否则会报错&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;matchLabels - 匹配template的label&lt;/li&gt;
  &lt;li&gt;matchExpressions - 通过指定key, values列表和关联key-value的操作，来构建更复杂的匹配&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;在指定的node上运行pods&quot;&gt;在指定的node上运行Pods&lt;/h3&gt;
&lt;p&gt;如果你指定一个.spec.template.spec.nodeSelector, 那么DaemonSet controller会在匹配的node上创建相关的Pods。如果指定spec.template.spec.affinity，那么会在亲和度匹配的node上创建Pods。如果什么都没有指定，那么将会在所有的node上创建。&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;Spec Example&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DaemonSet&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fluentd-elasticsearch&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kube-system&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;k8s-app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fluentd-logging&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fluentd-elasticsearch&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fluentd-elasticsearch&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;tolerations&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# this toleration is to have the daemonset runnable on master nodes&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# remove it if your masters can't run pods&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node-role.kubernetes.io/master&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;effect&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NoSchedule&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fluentd-elasticsearch&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;quay.io/fluentd_elasticsearch/fluentd:v2.5.2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;limits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;200Mi&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;100m&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;200Mi&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlog&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlibdockercontainers&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/docker/containers&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;terminationGracePeriodSeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlog&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlibdockercontainers&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;daemon-pods如何调度&quot;&gt;Daemon Pods如何调度&lt;/h2&gt;
&lt;p&gt;一般情况下，pods由Kubernetes调度器调度，但是Daemon pods被DaemonSet controller创建并调度。这会导致两个问题：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;不一致的Pod表现：一般的Pods会以Pending的状态创建，但是DaemonSet pods不会&lt;/li&gt;
  &lt;li&gt;Pod preemption被默认的调度器控制。当抢占启用时，DaemonSet controller会做出调度决定，而不考虑pod的优先级和抢占逻辑
可以通过添加NodeAffinity项到DaemonSet Pods可以让其使用默认的调度器&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;nodeAffinity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;requiredDuringSchedulingIgnoredDuringExecution&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;nodeSelectorTerms&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;matchFields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;metadata.name&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;In&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;target-host-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;另外，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node.kubernetes.io/unschedulable:NoSchedule&lt;/code&gt; &lt;strong&gt;toleration&lt;/strong&gt;会自动添加到DaemonSet Pods上，从而使默认的调度器忽略unschedulable的Nodes&lt;/p&gt;</content><author><name>Yawei</name></author><category term="kubernetes" /><summary type="html">守护进程集包含存储进程、日志收集进程、节点监控进程、和Pods管理（创建与回收）进程。</summary></entry><entry><title type="html">What’s the difference between @ObservedObject, @State, @Environment and @EnvironmentObject and @Binding?</title><link href="https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper/" rel="alternate" type="text/html" title="What’s the difference between @ObservedObject, @State, @Environment and @EnvironmentObject and @Binding?" /><published>2021-02-07T00:00:00+08:00</published><updated>2021-02-07T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper/">&lt;h2 id=&quot;state&quot;&gt;@State&lt;/h2&gt;

&lt;p&gt;只在view内部发生改变和使用，且是较为简单的数据类型。@State将变量的内存管理交给了SwiftUI。所有的view都是结构体，是标量，这意味着它们无法修改（只能重新赋值）。因此，当我们使用@State时， 我们将变量的控制权交给了SwiftUI，只要view存在，他就会一直在内存中存在。当变量发生改变时，SwiftUI也会自动重新加载。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;struct ContentView: View {
    @State private var score = 0
    init() {
        score = 1
    }
    // more code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;binding&quot;&gt;@Binding&lt;/h2&gt;

&lt;p&gt;当需要读写祖先view的@State或@ObservableObject(可能其中某个属性)的属性时&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {
    @State var isPresentingAlert = false

    var body: some View {
        Button(action: {
            self.isPresentingAlert = true
        }, label: {
            Text(&quot;Present an Alert&quot;)
        })
        .customAlert(isPresented: $isPresentingAlert) {
            CustomAlertView(title: Text(&quot;Alert!&quot;))
        }
    }}

struct CustomAlertView: View {
    let title: Text
    
    /// it needs read/write access to a State-
    /// wrapped property of an ancestor view
    @Binding var isBeingPresented: Bool
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swfit&quot;&gt;
struct MyView: View {

    /// it needs to provide read/write access of 
    /// one of its properties to a descendant view
    @State var isPresentingAlert = false

    var body: some View {
        Button(action: {
            self.isPresentingAlert = true
        }, label: {
            Text(&quot;Present an Alert&quot;)
        })
        .alert(isPresented: $isPresentingAlert) {
            Alert(title: Text(&quot;Alert!&quot;))
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;observedobject&quot;&gt;@ObservedObject&lt;/h2&gt;

&lt;p&gt;适用于自定义类型，具备多个属性和方法，或者需要跨view使用的情况。大部分情况和@State相同，只是结构更复杂。需要实现ObservableObject protocol，这意味着其内部的属性可以被SwiftUI binding. 大多数情况，我们直接使用@Published来声明内部属性，当然也可以使用combine框架实现自定义的Publisher&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;# 自己内部初始化
class MovieViewModel: ObservableObject {
    
    @Published var movies: [Movie] = [] // 1
    
    // more code
    
}


struct MoviesView: View {
    
    // 1
    @ObservedObject var viewModel = MovieViewModel()
    
    var body: some View {
        List(viewModel.movies) { movie in // 2
            HStack {
                VStack(alignment: .leading) {
                    Text(movie.title) // 3a
                        .font(.headline)
                    Text(movie.originalTitle) // 3b
                        .font(.subheadline)
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;# 外部初始化（view init时）

struct MyView: View {

    /// it is dependent on an object that can
    /// easily be passed to its initializer
    @ObservedObject var dessertFetcher: DessertFetcher

    var body: some View {
        List(dessertFetcher.desserts) {
            Text($0.name)
        }.onAppear {
            self.dessertFetcher.fetch()
        }
    }}

extension UIViewController {

    func observedObjectExampleTwo() -&amp;gt; UIViewController {
        let fetcher = DessertFetcher(preferences: .init(toleratesMint: false))
        let view = ObservedObjectExampleTwo(dessertFetcher: fetcher)
        let host = UIHostingController(rootView: view)
        return host
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;Warning: When you use a custom publisher to announce that your object has changed, this must happen on the main thread.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;environmentobject&quot;&gt;@EnvironmentObject&lt;/h2&gt;

&lt;p&gt;ObservedObject当需要跨view共享或者是内嵌很深的view需要但又不适合自己初始化时，需要使用@EnvironmentObject。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;@EnvironmentObject只支持1个实例&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct SomeChildView: View {

    /// it would be too cumbersome to pass that 
    /// observed object through all the initializers 
    /// of all your view's ancestors
    @EnvironmentObject var veggieFetcher: VegetableFetcher

    var body: some View {
        List(veggieFetcher.veggies) {
            Text($0.name)
        }.onAppear {
            self.veggieFetcher.fetch()
        }
    }}

struct SomeParentView: View {
    var body: some View {
        SomeChildView()
    }}

struct SomeGrandparentView: View {
    var body: some View {
        SomeParentView()
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;environment&quot;&gt;@Environment&lt;/h2&gt;

&lt;p&gt;当view依赖的不能满足ObservableObject协议时，可能是以下几种情况：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;依赖的是一个值类型&lt;/li&gt;
  &lt;li&gt;依赖项仅作为协议而不是具体类型公开&lt;/li&gt;
  &lt;li&gt;依赖是一个闭包&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;@Environment 支持多实例
修改@Published的属性，不会引发view的重绘&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {

    /// it is dependent on a type that cannot 
    /// conform to ObservableObject
    @Environment(\.theme) var theme: Theme

    var body: some View {
        Text(&quot;Me and my dad make models of clipper ships.&quot;)
            .foregroundColor(theme.foregroundColor)
            .background(theme.backgroundColor)
    }}

// MARK: - Dependencies

protocol Theme {
    var foregroundColor: Color { get }
    var backgroundColor: Color { get }
}

struct PinkTheme: Theme {
    var foregroundColor: Color { .white }
    var backgroundColor: Color { .pink }
}

// MARK: - Environment Boilerplate

struct ThemeKey: EnvironmentKey {
    static var defaultValue: Theme {
        return PinkTheme()
    }}

extension EnvironmentValues {
    var theme: Theme {
        get { return self[ThemeKey.self]  }
        set { self[ThemeKey.self] = newValue }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;workaround-for-multiple-instances-of-an-environmentobject&quot;&gt;Workaround for Multiple Instances of an EnvironmentObject&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {

    @DistinctEnvironmentObject(\.posts) var postsService: Microservice
    @DistinctEnvironmentObject(\.users) var usersService: Microservice
    @DistinctEnvironmentObject(\.channels) var channelsService: Microservice

    var body: some View {
        Form {
            Section(header: Text(&quot;Posts&quot;)) {
                List(postsService.content, id: \.self) {
                    Text($0)
                }
            }
            Section(header: Text(&quot;Users&quot;)) {
                List(usersService.content, id: \.self) {
                    Text($0)
                }
            }
            Section(header: Text(&quot;Channels&quot;)) {
                List(channelsService.content, id: \.self) {
                    Text($0)
                }
            }
        }.onAppear(perform: fetchContent)
    }}

// MARK: - Property Wrapper To Make This All Work

@propertyWrapperstruct DistinctEnvironmentObject&amp;lt;Wrapped&amp;gt;: DynamicProperty where Wrapped : ObservableObject {
    var wrappedValue: Wrapped { _wrapped }
    @ObservedObject private var _wrapped: Wrapped

    init(_ keypath: KeyPath&amp;lt;EnvironmentValues, Wrapped&amp;gt;) {
        _wrapped = Environment&amp;lt;Wrapped&amp;gt;(keypath).wrappedValue
    }}

// MARK: - Wherever You Create Your View Hierarchy

MyView()
    .environment(\.posts, Microservice.posts)
    .environment(\.users, Microservice.users)
    .environment(\.channels, Microservice.channels)
&lt;/code&gt;&lt;/pre&gt;</content><author><name>Yawei</name></author><category term="iOS," /><category term="Swift," /><category term="SwiftUI" /><summary type="html">@State</summary></entry><entry><title type="html">Effective presentations</title><link href="https://pfcstyle.github.io/2021/02/06/Effective-Presentations/" rel="alternate" type="text/html" title="Effective presentations" /><published>2021-02-06T00:00:00+08:00</published><updated>2021-02-06T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/06/Effective-Presentations</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/06/Effective-Presentations/">&lt;h1 id=&quot;progress&quot;&gt;progress&lt;/h1&gt;
&lt;h2 id=&quot;welcome-your-audience&quot;&gt;Welcome your audience&lt;/h2&gt;

&lt;p&gt;Good morning, everyone. Thanks for coming.&lt;/p&gt;

&lt;h2 id=&quot;tell-audience-some-interesting-abstract-information-or-statistic-to-get-peoples-attention&quot;&gt;Tell audience some interesting abstract information or statistic to get people’s attention.&lt;/h2&gt;

&lt;p&gt;I know that you’re all anxious to get more information about our acquisition of Sunset Computers.&lt;/p&gt;

&lt;h2 id=&quot;offer-people-a-map-of-your-presentation&quot;&gt;Offer people a ‘map’ of your presentation.&lt;/h2&gt;

&lt;p&gt;I’ll begin by giving a general update.&lt;/p&gt;

&lt;p&gt;Then, I’ll be discussing out acquisition of Smoot Hawley.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;-ing的形式听起来不太确定并且更加友好&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I’m going to finish by talking about new projects.&lt;/p&gt;

&lt;p&gt;However, I won’t have any new financial information.&lt;/p&gt;

&lt;h2 id=&quot;give-your-audience-the-rules-for-questions&quot;&gt;Give your audience the rules for questions.&lt;/h2&gt;

&lt;p&gt;During my presentation, if you have questions, please just ask them at any time(or until the end).&lt;/p&gt;

&lt;h2 id=&quot;transitioning-to-the-next-point&quot;&gt;Transitioning to the next point&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;As you know&lt;/li&gt;
  &lt;li&gt;However&lt;/li&gt;
  &lt;li&gt;… which brings us to my next point&lt;/li&gt;
  &lt;li&gt;Best of all  首先&lt;/li&gt;
  &lt;li&gt;Worse yet 最糟糕的是&lt;/li&gt;
  &lt;li&gt;Now, I’d like to move on to；现在，我想转到。。。&lt;/li&gt;
  &lt;li&gt;These pie charts show…&lt;/li&gt;
  &lt;li&gt;As you can clearly see … 你可以清楚看到&lt;/li&gt;
  &lt;li&gt;I’d like to draw your attentions to …&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;concluding-a-presentation&quot;&gt;Concluding a presentation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;To summarize, we have a new CFO, sales are rising steadily and our merger with Smoot happens next month.&lt;/li&gt;
  &lt;li&gt;To conclusion, …&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ending-a-presentation&quot;&gt;Ending a presentation&lt;/h2&gt;

&lt;p&gt;Next steps for us all are to come up with ideas for improving morale. Email them to me.
我们所有人下面要做的是想出提高士气的主意。把它们用邮件发送给我。
I’ll take questions now.&lt;/p&gt;

&lt;p&gt;Are there any questions?
Any more questions?
Any other questions?&lt;/p&gt;

&lt;p&gt;If you think of other questions, just send me an email.&lt;/p&gt;

&lt;p&gt;Do you have any updates, Tom?&lt;/p&gt;

&lt;p&gt;Thank you all for coming today.&lt;/p&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">progress Welcome your audience</summary></entry><entry><title type="html">Future Technology</title><link href="https://pfcstyle.github.io/2021/02/05/Future-Technology/" rel="alternate" type="text/html" title="Future Technology" /><published>2021-02-05T00:00:00+08:00</published><updated>2021-02-05T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/05/Future-Technology</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/05/Future-Technology/">&lt;p&gt;Prof. Gilbert: Making use of this technology will &lt;strong&gt;instantly benefit&lt;/strong&gt; some of the poorest people on Earth. Drought-resistant crops will &lt;strong&gt;solve&lt;/strong&gt; the problem of hunger in the developing world.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: Fine-tuning the genes of mosquitos so that they spread vaccines instead of malaria will &lt;strong&gt;eliminate&lt;/strong&gt; many terrible diseases.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: And, closer to home, gene screening will &lt;strong&gt;enable&lt;/strong&gt; us to find and fix health problems before a person is even born.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: &lt;strong&gt;Who wouldn’t want the ability to prevent their child from developing cancer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: Being able to change the DNA of plants, animals and ourseleves will &lt;strong&gt;trigger a chain reaction&lt;/strong&gt; of technological advancements, all of which will help us to &lt;strong&gt;overcome&lt;/strong&gt; the challenges the future will throw at us.&lt;/p&gt;

&lt;p&gt;A: But not all the experts are so optimistic.&lt;/p&gt;

&lt;p&gt;A: Professor Goldman, fro Queen’s College, is more cautionary.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: This is &lt;strong&gt;untested technology&lt;/strong&gt;, and I’d &lt;strong&gt;warn against&lt;/strong&gt; &lt;strong&gt;taking a leap into&lt;/strong&gt; the unknown Manipulating DNA for our benefit really is ‘&lt;strong&gt;Playing God&lt;/strong&gt;’, and could &lt;strong&gt;come back to haunt us&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: Imagine we genetically engineer some crops and the changes &lt;strong&gt;lead to&lt;/strong&gt; undesirable results; those changes might be &lt;strong&gt;impossible to reverse&lt;/strong&gt;, and have a &lt;strong&gt;disastrous&lt;/strong&gt; effect on the environment.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: It’s a &lt;strong&gt;slippery slope&lt;/strong&gt;, with &lt;strong&gt;serious consequences&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: Once we start making changes to human DNA, &lt;strong&gt;who knows what terrible results it could have on our health in the future?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prof. Goldman: We really shouldn’t be &lt;strong&gt;playing around&lt;/strong&gt; with technology we don’t fully understand yes.&lt;/p&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Prof. Gilbert: Making use of this technology will instantly benefit some of the poorest people on Earth. Drought-resistant crops will solve the problem of hunger in the developing world.</summary></entry><entry><title type="html">Negotiating a better deal</title><link href="https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal/" rel="alternate" type="text/html" title="Negotiating a better deal" /><published>2021-02-04T00:00:00+08:00</published><updated>2021-02-04T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal/">&lt;ul&gt;
  &lt;li&gt;Target point: The Best result to make a deal.&lt;/li&gt;
  &lt;li&gt;Benchmark: The middle result to make a deal.&lt;/li&gt;
  &lt;li&gt;Resistance point: The worst result to make a deal.&lt;/li&gt;
  &lt;li&gt;Bargaining range: From resistance point to target point.&lt;/li&gt;
  &lt;li&gt;Interests: The foundamental reason of a negotiation.&lt;/li&gt;
  &lt;li&gt;Position: Current level.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Target point: The Best result to make a deal. Benchmark: The middle result to make a deal. Resistance point: The worst result to make a deal. Bargaining range: From resistance point to target point. Interests: The foundamental reason of a negotiation. Position: Current level.</summary></entry><entry><title type="html">Describing our job skills</title><link href="https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills/" rel="alternate" type="text/html" title="Describing our job skills" /><published>2021-02-03T00:00:00+08:00</published><updated>2021-02-03T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills/">&lt;h1 id=&quot;skills&quot;&gt;Skills&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;People skills&lt;/p&gt;

    &lt;p&gt;John is extremely likeable and he gets along well with his colleagues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Speaking skills&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Teamwork&lt;/p&gt;

    &lt;p&gt;He is happy to cooperate with others.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Writing skills&lt;/p&gt;

    &lt;p&gt;His reports are well organized and easy to understand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Budget management&lt;/p&gt;

    &lt;p&gt;He finishes his project without exceeding his budget.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Organization&lt;/p&gt;

    &lt;p&gt;He finishes his project without going beyond his spending limit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Creativity&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Problem solving&lt;/p&gt;

    &lt;p&gt;When things go wrong, he relies on his teammates to find the answers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stress management&lt;/p&gt;

    &lt;p&gt;He has difficulty working under pressure, and this can affect his work.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;some-describes&quot;&gt;Some describes&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;You get along well with some of your colleague, but not all of them.&lt;/li&gt;
  &lt;li&gt;Being confident is something that comes naturally to you.&lt;/li&gt;
  &lt;li&gt;Your boss encourages you to think outside the box.&lt;/li&gt;
  &lt;li&gt;You don’t usually take the initiative at work: you wait for the boss to tell you what to do.&lt;/li&gt;
  &lt;li&gt;You need to become more efficient in your work.&lt;/li&gt;
  &lt;li&gt;You have a skill that give you the ability to communicate effectively.&lt;/li&gt;
  &lt;li&gt;You can cooperate with others, but you don’t like to rely on them.&lt;/li&gt;
  &lt;li&gt;I am trying to stay up to date with the latest developments in my field.&lt;/li&gt;
  &lt;li&gt;I’m behind on answering my emails, now I’m trying to get up to date.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Skills</summary></entry><entry><title type="html">Talking about career paths</title><link href="https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths/" rel="alternate" type="text/html" title="Talking about career paths" /><published>2021-02-02T00:00:00+08:00</published><updated>2021-02-02T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths/">&lt;ol&gt;
  &lt;li&gt;Mark: Hey, Jane! Can I ask you a question?&lt;/li&gt;
  &lt;li&gt;Jane: Sure, What’s up?&lt;/li&gt;
  &lt;li&gt;Mark: Well, I’m going to be graduating soon, so I’ll be applying for jobs, but I’m not sure which jobs to choose. My parents say I should choose the company that pays the most but …&lt;/li&gt;
  &lt;li&gt;Jane: But your’re worried that &lt;strong&gt;you’re going to end up with a boss you hate?&lt;/strong&gt;
    &lt;blockquote&gt;
      &lt;p&gt;you’re going to get the result in the end with…&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Mark: Yeah! Do you have any suggestions?&lt;/li&gt;
  &lt;li&gt;Jane: Sure. Several things to &lt;strong&gt;keep in mind&lt;/strong&gt;. First, do some research about the company. What are the chances that you’ll get a promotion if you &lt;strong&gt;stay with the company long-term&lt;/strong&gt;? Also, where’s the company located? How long will the &lt;strong&gt;commute&lt;/strong&gt; be? And of course the salary is important. &lt;strong&gt;Rather than&lt;/strong&gt; thinking about which company pays the most &lt;strong&gt;though&lt;/strong&gt;, find out which company pays you enough to live the life you want to live. However, &lt;strong&gt;none of this guarantees(there’s no promise)&lt;/strong&gt; that you’re going to like your boss, but at least you’ll like everything else about the job if that happens.&lt;/li&gt;
  &lt;li&gt;Mark: Wow! &lt;strong&gt;You’ve given me a lot to think about.&lt;/strong&gt; Thanks!&lt;/li&gt;
  &lt;li&gt;Jane: Glad I could be of help!&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Mark: Hey, Jane! Can I ask you a question? Jane: Sure, What’s up? Mark: Well, I’m going to be graduating soon, so I’ll be applying for jobs, but I’m not sure which jobs to choose. My parents say I should choose the company that pays the most but … Jane: But your’re worried that you’re going to end up with a boss you hate? you’re going to get the result in the end with… Mark: Yeah! Do you have any suggestions? Jane: Sure. Several things to keep in mind. First, do some research about the company. What are the chances that you’ll get a promotion if you stay with the company long-term? Also, where’s the company located? How long will the commute be? And of course the salary is important. Rather than thinking about which company pays the most though, find out which company pays you enough to live the life you want to live. However, none of this guarantees(there’s no promise) that you’re going to like your boss, but at least you’ll like everything else about the job if that happens. Mark: Wow! You’ve given me a lot to think about. Thanks! Jane: Glad I could be of help!</summary></entry><entry><title type="html">spatialite-android-sdk的编译和使用</title><link href="https://pfcstyle.github.io/2016/12/29/spatialite-android/" rel="alternate" type="text/html" title="spatialite-android-sdk的编译和使用" /><published>2016-12-29T00:00:00+08:00</published><updated>2016-12-29T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2016/12/29/spatialite-android</id><content type="html" xml:base="https://pfcstyle.github.io/2016/12/29/spatialite-android/">&lt;blockquote&gt;
  &lt;p&gt;好记性不如烂笔头&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;项目用到spatialite,记录下使用方法&lt;/p&gt;

&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;环境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有android studio就行了&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源码下载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果想使用最新版本，去google&lt;a href=&quot;https://code.google.com/archive/p/spatialite-android/&quot;&gt;下载&lt;/a&gt;源码吧。&lt;/p&gt;

&lt;p&gt;我这里提供博客日期为止最新的&lt;a href=&quot;https://github.com/pfcstyle/spatialite-android&quot;&gt;源码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里还有已经把所有的坑填上了&lt;a href=&quot;https://github.com/pfcstyle/spatialite-android-gradle&quot;&gt;完整工程&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;开始编译&quot;&gt;开始编译&lt;/h1&gt;

&lt;h2 id=&quot;使用android-studio打开项目&quot;&gt;使用android studio打开项目&lt;/h2&gt;

&lt;p&gt;File=&amp;gt;New=&amp;gt;import project&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/open-spatialite.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;会报一些错误直接贴图&quot;&gt;会报一些错误，直接贴图&lt;/h3&gt;

&lt;p&gt;缺少compile-sdk 版本&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/open-spatialite.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最小skd版本设置错误&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/sp-vmin-bug.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;package-name重复
&lt;img src=&quot;/img/post/2016-12-29/package-name.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;缺少ndk编译模块&lt;/p&gt;

&lt;p&gt;这个首先你应该已经安装了ndk,这个我就不多说了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/sourceSets.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/property.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时候sync gradle应该就没有问题了&lt;/p&gt;

&lt;h3 id=&quot;配置工程&quot;&gt;配置工程&lt;/h3&gt;

&lt;p&gt;我没有重新去打包so文件，在&lt;a href=&quot;https://code.google.com/archive/p/spatialite-android/&quot;&gt;这里&lt;/a&gt;有具体的打包流程。但是我有尝试过，确实是很麻烦的一件事，工程中没有完整的make文件，依赖都需要自己去管理，我直接去网上找到了合适的&lt;a href=&quot;http://pan.baidu.com/s/1c25jTfi&quot;&gt;so文件&lt;/a&gt;。&lt;strong&gt;如果你是自己找的so文件，那么，一定要确定是ndk-r8以上版本编译的，否则会有text alloc…类似的错误&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/sp-jnilibs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;删除掉demo app目录下的Google Map相关的类，因为需要配置api_key,而且现在google map好像都已经完全更新了，不知道接口变了没有，要验证spatialite 是否成功并不需要展示到map上，所以删除掉&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MappingActivity.java&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MapSelectionOverlay.java&lt;/code&gt;两个类文件,记得修改清单文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/delete-java.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在已经可以编译成功并运行了。但是现在只能在32bit的安卓机上运行，因为so只有32bit的，64bit的机子会找错文件夹，需要再设置一下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/abifilter.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后再运行就没有任何问题了。&lt;/p&gt;

&lt;h1 id=&quot;spatialite-android-sdk-的使用&quot;&gt;spatialite-android-sdk 的使用&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;首先在build/outputs中找到aar文件，具体aar怎么用可以参考我的&lt;a href=&quot;http://pfcstyle.me/2016/12/28/mapbox-compile/&quot;&gt;上篇&lt;/a&gt;博客。&lt;/li&gt;
  &lt;li&gt;下载&lt;a href=&quot;http://www.gaia-gis.it/gaia-sins/windows-bin-amd64/&quot;&gt;spatialite-gui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;普及一下spatialite的基础知识&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spatialite&amp;gt; select spatialite_version();
4.0.0
spatialite&amp;gt; select proj4_version();
Rel. 4.8.0, 6 March 2012
spatialite&amp;gt; select geos_version();
3.3.6-CAPI-1.7.6
spatialite&amp;gt; select lwgeom_version();
2.0.2
spatialite&amp;gt; select HasIconv();
1
spatialite&amp;gt; select HasMathSQL();
1
spatialite&amp;gt; select HasGeoCallbacks();
1
spatialite&amp;gt; select HasProj();
1
spatialite&amp;gt; select HasGeos();
1
spatialite&amp;gt; select HasGeosAdvanced();
1
spatialite&amp;gt; select HasGeosTrunk();
0
spatialite&amp;gt; select HasLwGeom();
1
spatialite&amp;gt; select HasEpsg();
1
spatialite&amp;gt; select HasFreeXL();
1

輸入由 WGS84 為基準的經緯度（4326 是 WGS84 2D 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(MakePoint(114.1689,22.4518,4326));
POINT(114.1689 22.4518)

將它轉換為 WGS84 UTM 50N 格網座標（32650 是 WGS84 / UTM zone 50N 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(ST_Transform(MakePoint(114.1689,22.4518,4326),32650));
POINT(208621.605201 2485587.067636)

將它轉換為 HK1980 格網座標（2326 是 Hong Kong 1980 Grid System 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(ST_Transform(MakePoint(114.1689,22.4518,4326),2326));
POINT(835447.180293 834705.40192)

利用格網座標計算大埔中心至九龍坑山的距離：
spatialite&amp;gt; select ST_Distance(MakePoint(208838.738969, 2488246.942923), MakePoint(208621.605201, 2485587.067636));
2668.72321824495

利用經緯度計算大埔中心至九龍坑山的距離：
spatialite&amp;gt; select ST_Length(MakeLine(MakePoint(114.17052, 22.475837,4326), MakePoint(114.1689,22.4518,4326)), 1);
2666.99235712016


計算大埔中心至九龍坑山的方位角：
spatialite&amp;gt; select Degrees(ST_Azimuth(MakePoint(114.1689,22.4518,4326), MakePointZ(114.17052, 22.475837, 437.639187, 4326)));
3.85568120514838

輸出九龍坑山三角網測站的 KML：
spatialite&amp;gt; select AsKml(&quot;Cloudy Hill&quot;, &quot;description&quot;, MakePointZ( 835614.056, 837367.172, 440.8, 2326));
&amp;lt;Placemark&amp;gt;&amp;lt;name&amp;gt;Cloudy Hill&amp;lt;/name&amp;gt;&amp;lt;description&amp;gt;description&amp;lt;/description&amp;gt;&amp;lt;Point&amp;gt;&amp;lt;coordinates&amp;gt;114.170519962613,22.47583709798935,437.6391865937039&amp;lt;/coordinates&amp;gt;&amp;lt;/Point&amp;gt;&amp;lt;/Placemark&amp;gt;

點的 Union：
spatialite&amp;gt; select astext(ST_Union(MakePoint(114.17052, 22.475837,4326), MakePoint(114.1689,22.4518,4326)));
MULTIPOINT(114.17052 22.475837, 114.1689 22.4518)

創建有地理數據的表，先是一般格式的欄：
spatialite&amp;gt; CREATE TABLE TestTable(
id INTEGER PRIMARY KEY AUTOINCREMENT,
Name TEXT NOT NULL);

創建該地理數據欄，儲存以 WGS84 為基準的點：
spatialite&amp;gt; SELECT AddGeometryColumn('TestTable', 'Geometry', 4326, 'POINT', 'XY');
1

加入 R* index，以加快檢索：(添加索引)
spatialite&amp;gt; SELECT CreateSpatialIndex('TestTable', 'Geometry');
1

加入點數據：
spatialite&amp;gt; insert into TestTable (Name, Geometry) VALUES (&quot;a&quot;, MakePoint(114.1689,22.4518,4326));
spatialite&amp;gt; insert into TestTable (Name, Geometry) VALUES (&quot;b&quot;, MakePoint(114.17052,22.475837,4326));

列出數據（Geometry 未能直接顯示）：
spatialite&amp;gt; select * from TestTable;
1|a|
2|b|

列出數據：
spatialite&amp;gt; select id, Name, AsText(Geometry) from TestTable;
1|a|POINT(114.1689 22.4518)
2|b|POINT(114.17052 22.475837)

利用 R* index 查出在 22.4518N 114.1689E, 22.4520N 114.1690E 內的點：
spatialite&amp;gt; SELECT  id, Name, AsText(Geometry) FROM TestTable WHERE ROWID IN (SELECT pkid FROM idx_TestTable_Geometry WHERE pkid MATCH RTreeIntersects(114.1689,22.4518,114.1690,22.4520));
1|a|POINT(114.1689 22.4518)

將點數據轉成 GeoHash（可以文字方式儲存於一般資料庫，以方便查詢某一點附近的其他點）：
spatialite&amp;gt; SELECT Name, GeoHash(Geometry) FROM TestTable;
a|wecptzpr0ny5c1eeemw3
b|wecpy587jztypffhy099
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;sdk的简单使用，我直接按照demo理一下。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//上面这些获取数据库路径的代码就省略了
...

// 1.
//Open the database 打开数据库
jsqlite.Database db = new jsqlite.Database();
db.open(dbFile.toString(), jsqlite.Constants.SQLITE_OPEN_READONLY);

// 2.
// Test prepare statements  测试下准备好了没有？我的理解就是查询一下数据库的基本状态和信息，可能真正使用时也是用不到的。
String query = &quot;SELECT name, peoples, AsText(Geometry) from Towns where peoples &amp;gt; 350000&quot;;
Stmt st = db.prepare(query);
st.step();
st.close();

// 3.测试各种查询  你们也可以把我上面简单介绍的其他命令拿来测试下
// Test various queries
db.exec(&quot;select Distance(PointFromText('point(-77.35368 39.04106)', 4326), PointFromText('point(-77.35581 39.01725)', 4326));&quot;,
		cb);
db.exec(&quot;SELECT name, peoples, AsText(Geometry), GeometryType(Geometry), NumPoints(Geometry), SRID(Geometry), IsValid(Geometry) from Towns where peoples &amp;gt; 350000;&quot;,
		cb);
db.exec(&quot;SELECT Distance( Transform(MakePoint(4.430174797, 51.01047063, 4326), 32631), Transform(MakePoint(4.43001276, 51.01041585, 4326),32631));&quot;,
		cb);

		
// 4.
// Close the database 搞完了就关闭
db.close();


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后，这里还有一个&lt;a href=&quot;https://www.gaia-gis.it/fossil/libspatialite/wiki?name=spatialite-android-tutorial&quot;&gt;官方的tutorial&lt;/a&gt;，虽然很老了，但是api基本没变化，大家可以找到更多关于使用spatialite的使用方法。感兴趣的可以看下。&lt;/p&gt;

&lt;p&gt;好了，就到这里了。&lt;/p&gt;</content><author><name>PfCStyle</name></author><category term="Android" /><summary type="html">好记性不如烂笔头</summary></entry></feed>