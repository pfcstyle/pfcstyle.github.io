<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://pfcstyle.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pfcstyle.github.io/" rel="alternate" type="text/html" /><updated>2021-02-08T11:18:22+08:00</updated><id>https://pfcstyle.github.io/feed.xml</id><title type="html">01手记</title><subtitle>Will的个人手记</subtitle><author><name>Yawei Wang</name></author><entry><title type="html">What’s the difference between @ObservedObject, @State, @Environment and @EnvironmentObject and @Binding?</title><link href="https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper/" rel="alternate" type="text/html" title="What’s the difference between @ObservedObject, @State, @Environment and @EnvironmentObject and @Binding?" /><published>2021-02-07T00:00:00+08:00</published><updated>2021-02-07T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/07/Diff-Of-SwiftUI-Property-Wrapper/">&lt;h2 id=&quot;state&quot;&gt;@State&lt;/h2&gt;

&lt;p&gt;只在view内部发生改变和使用，且是较为简单的数据类型。@State将变量的内存管理交给了SwiftUI。所有的view都是结构体，是标量，这意味着它们无法修改（只能重新赋值）。因此，当我们使用@State时， 我们将变量的控制权交给了SwiftUI，只要view存在，他就会一直在内存中存在。当变量发生改变时，SwiftUI也会自动重新加载。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;struct ContentView: View {
    @State private var score = 0
    init() {
        score = 1
    }
    // more code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;binding&quot;&gt;@Binding&lt;/h2&gt;

&lt;p&gt;当需要读写祖先view的@State或@ObservableObject(可能其中某个属性)的属性时&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {
    @State var isPresentingAlert = false

    var body: some View {
        Button(action: {
            self.isPresentingAlert = true
        }, label: {
            Text(&quot;Present an Alert&quot;)
        })
        .customAlert(isPresented: $isPresentingAlert) {
            CustomAlertView(title: Text(&quot;Alert!&quot;))
        }
    }}

struct CustomAlertView: View {
    let title: Text
    
    /// it needs read/write access to a State-
    /// wrapped property of an ancestor view
    @Binding var isBeingPresented: Bool
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swfit&quot;&gt;
struct MyView: View {

    /// it needs to provide read/write access of 
    /// one of its properties to a descendant view
    @State var isPresentingAlert = false

    var body: some View {
        Button(action: {
            self.isPresentingAlert = true
        }, label: {
            Text(&quot;Present an Alert&quot;)
        })
        .alert(isPresented: $isPresentingAlert) {
            Alert(title: Text(&quot;Alert!&quot;))
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;observedobject&quot;&gt;@ObservedObject&lt;/h2&gt;

&lt;p&gt;适用于自定义类型，具备多个属性和方法，或者需要跨view使用的情况。大部分情况和@State相同，只是结构更复杂。需要实现ObservableObject protocol，这意味着其内部的属性可以被SwiftUI binding. 大多数情况，我们直接使用@Published来声明内部属性，当然也可以使用combine框架实现自定义的Publisher&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;# 自己内部初始化
class MovieViewModel: ObservableObject {
    
    @Published var movies: [Movie] = [] // 1
    
    // more code
    
}


struct MoviesView: View {
    
    // 1
    @ObservedObject var viewModel = MovieViewModel()
    
    var body: some View {
        List(viewModel.movies) { movie in // 2
            HStack {
                VStack(alignment: .leading) {
                    Text(movie.title) // 3a
                        .font(.headline)
                    Text(movie.originalTitle) // 3b
                        .font(.subheadline)
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;# 外部初始化（view init时）

struct MyView: View {

    /// it is dependent on an object that can
    /// easily be passed to its initializer
    @ObservedObject var dessertFetcher: DessertFetcher

    var body: some View {
        List(dessertFetcher.desserts) {
            Text($0.name)
        }.onAppear {
            self.dessertFetcher.fetch()
        }
    }}

extension UIViewController {

    func observedObjectExampleTwo() -&amp;gt; UIViewController {
        let fetcher = DessertFetcher(preferences: .init(toleratesMint: false))
        let view = ObservedObjectExampleTwo(dessertFetcher: fetcher)
        let host = UIHostingController(rootView: view)
        return host
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;Warning: When you use a custom publisher to announce that your object has changed, this must happen on the main thread.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;environmentobject&quot;&gt;@EnvironmentObject&lt;/h2&gt;

&lt;p&gt;ObservedObject当需要跨view共享或者是内嵌很深的view需要但又不适合自己初始化时，需要使用@EnvironmentObject。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;@EnvironmentObject只支持1个实例&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct SomeChildView: View {

    /// it would be too cumbersome to pass that 
    /// observed object through all the initializers 
    /// of all your view's ancestors
    @EnvironmentObject var veggieFetcher: VegetableFetcher

    var body: some View {
        List(veggieFetcher.veggies) {
            Text($0.name)
        }.onAppear {
            self.veggieFetcher.fetch()
        }
    }}

struct SomeParentView: View {
    var body: some View {
        SomeChildView()
    }}

struct SomeGrandparentView: View {
    var body: some View {
        SomeParentView()
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;environment&quot;&gt;@Environment&lt;/h2&gt;

&lt;p&gt;当view依赖的不能满足ObservableObject协议时，可能是以下几种情况：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;依赖的是一个值类型&lt;/li&gt;
  &lt;li&gt;依赖项仅作为协议而不是具体类型公开&lt;/li&gt;
  &lt;li&gt;依赖是一个闭包&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;@Environment 支持多实例
修改@Published的属性，不会引发view的重绘&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {

    /// it is dependent on a type that cannot 
    /// conform to ObservableObject
    @Environment(\.theme) var theme: Theme

    var body: some View {
        Text(&quot;Me and my dad make models of clipper ships.&quot;)
            .foregroundColor(theme.foregroundColor)
            .background(theme.backgroundColor)
    }}

// MARK: - Dependencies

protocol Theme {
    var foregroundColor: Color { get }
    var backgroundColor: Color { get }
}

struct PinkTheme: Theme {
    var foregroundColor: Color { .white }
    var backgroundColor: Color { .pink }
}

// MARK: - Environment Boilerplate

struct ThemeKey: EnvironmentKey {
    static var defaultValue: Theme {
        return PinkTheme()
    }}

extension EnvironmentValues {
    var theme: Theme {
        get { return self[ThemeKey.self]  }
        set { self[ThemeKey.self] = newValue }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;workaround-for-multiple-instances-of-an-environmentobject&quot;&gt;Workaround for Multiple Instances of an EnvironmentObject&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;
struct MyView: View {

    @DistinctEnvironmentObject(\.posts) var postsService: Microservice
    @DistinctEnvironmentObject(\.users) var usersService: Microservice
    @DistinctEnvironmentObject(\.channels) var channelsService: Microservice

    var body: some View {
        Form {
            Section(header: Text(&quot;Posts&quot;)) {
                List(postsService.content, id: \.self) {
                    Text($0)
                }
            }
            Section(header: Text(&quot;Users&quot;)) {
                List(usersService.content, id: \.self) {
                    Text($0)
                }
            }
            Section(header: Text(&quot;Channels&quot;)) {
                List(channelsService.content, id: \.self) {
                    Text($0)
                }
            }
        }.onAppear(perform: fetchContent)
    }}

// MARK: - Property Wrapper To Make This All Work

@propertyWrapperstruct DistinctEnvironmentObject&amp;lt;Wrapped&amp;gt;: DynamicProperty where Wrapped : ObservableObject {
    var wrappedValue: Wrapped { _wrapped }
    @ObservedObject private var _wrapped: Wrapped

    init(_ keypath: KeyPath&amp;lt;EnvironmentValues, Wrapped&amp;gt;) {
        _wrapped = Environment&amp;lt;Wrapped&amp;gt;(keypath).wrappedValue
    }}

// MARK: - Wherever You Create Your View Hierarchy

MyView()
    .environment(\.posts, Microservice.posts)
    .environment(\.users, Microservice.users)
    .environment(\.channels, Microservice.channels)
&lt;/code&gt;&lt;/pre&gt;</content><author><name>Yawei</name></author><category term="iOS," /><category term="Swift," /><category term="SwiftUI" /><summary type="html">@State</summary></entry><entry><title type="html">Effective presentations</title><link href="https://pfcstyle.github.io/2021/02/06/Effective-Presentations/" rel="alternate" type="text/html" title="Effective presentations" /><published>2021-02-06T00:00:00+08:00</published><updated>2021-02-06T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/06/Effective-Presentations</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/06/Effective-Presentations/">&lt;h1 id=&quot;progress&quot;&gt;progress&lt;/h1&gt;
&lt;h2 id=&quot;welcome-your-audience&quot;&gt;Welcome your audience&lt;/h2&gt;

&lt;p&gt;Good morning, everyone. Thanks for coming.&lt;/p&gt;

&lt;h2 id=&quot;tell-audience-some-interesting-abstract-information-or-statistic-to-get-peoples-attention&quot;&gt;Tell audience some interesting abstract information or statistic to get people’s attention.&lt;/h2&gt;

&lt;p&gt;I know that you’re all anxious to get more information about our acquisition of Sunset Computers.&lt;/p&gt;

&lt;h2 id=&quot;offer-people-a-map-of-your-presentation&quot;&gt;Offer people a ‘map’ of your presentation.&lt;/h2&gt;

&lt;p&gt;I’ll begin by giving a general update.&lt;/p&gt;

&lt;p&gt;Then, I’ll be discussing out acquisition of Smoot Hawley.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;-ing的形式听起来不太确定并且更加友好&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I’m going to finish by talking about new projects.&lt;/p&gt;

&lt;p&gt;However, I won’t have any new financial information.&lt;/p&gt;

&lt;h2 id=&quot;give-your-audience-the-rules-for-questions&quot;&gt;Give your audience the rules for questions.&lt;/h2&gt;

&lt;p&gt;During my presentation, if you have questions, please just ask them at any time(or until the end).&lt;/p&gt;

&lt;h2 id=&quot;transitioning-to-the-next-point&quot;&gt;Transitioning to the next point&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;As you know&lt;/li&gt;
  &lt;li&gt;However&lt;/li&gt;
  &lt;li&gt;… which brings us to my next point&lt;/li&gt;
  &lt;li&gt;Best of all  首先&lt;/li&gt;
  &lt;li&gt;Worse yet 最糟糕的是&lt;/li&gt;
  &lt;li&gt;Now, I’d like to move on to；现在，我想转到。。。&lt;/li&gt;
  &lt;li&gt;These pie charts show…&lt;/li&gt;
  &lt;li&gt;As you can clearly see … 你可以清楚看到&lt;/li&gt;
  &lt;li&gt;I’d like to draw your attentions to …&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;concluding-a-presentation&quot;&gt;Concluding a presentation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;To summarize, we have a new CFO, sales are rising steadily and our merger with Smoot happens next month.&lt;/li&gt;
  &lt;li&gt;To conclusion, …&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ending-a-presentation&quot;&gt;Ending a presentation&lt;/h2&gt;

&lt;p&gt;Next steps for us all are to come up with ideas for improving morale. Email them to me.
我们所有人下面要做的是想出提高士气的主意。把它们用邮件发送给我。
I’ll take questions now.&lt;/p&gt;

&lt;p&gt;Are there any questions?
Any more questions?
Any other questions?&lt;/p&gt;

&lt;p&gt;If you think of other questions, just send me an email.&lt;/p&gt;

&lt;p&gt;Do you have any updates, Tom?&lt;/p&gt;

&lt;p&gt;Thank you all for coming today.&lt;/p&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">progress Welcome your audience</summary></entry><entry><title type="html">Future Technology</title><link href="https://pfcstyle.github.io/2021/02/05/Future-Technology/" rel="alternate" type="text/html" title="Future Technology" /><published>2021-02-05T00:00:00+08:00</published><updated>2021-02-05T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/05/Future-Technology</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/05/Future-Technology/">&lt;p&gt;Prof. Gilbert: Making use of this technology will &lt;strong&gt;instantly benefit&lt;/strong&gt; some of the poorest people on Earth. Drought-resistant crops will &lt;strong&gt;solve&lt;/strong&gt; the problem of hunger in the developing world.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: Fine-tuning the genes of mosquitos so that they spread vaccines instead of malaria will &lt;strong&gt;eliminate&lt;/strong&gt; many terrible diseases.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: And, closer to home, gene screening will &lt;strong&gt;enable&lt;/strong&gt; us to find and fix health problems before a person is even born.&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: &lt;strong&gt;Who wouldn’t want the ability to prevent their child from developing cancer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prof. Gilbert: Being able to change the DNA of plants, animals and ourseleves will &lt;strong&gt;trigger a chain reaction&lt;/strong&gt; of technological advancements, all of which will help us to &lt;strong&gt;overcome&lt;/strong&gt; the challenges the future will throw at us.&lt;/p&gt;

&lt;p&gt;A: But not all the experts are so optimistic.&lt;/p&gt;

&lt;p&gt;A: Professor Goldman, fro Queen’s College, is more cautionary.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: This is &lt;strong&gt;untested technology&lt;/strong&gt;, and I’d &lt;strong&gt;warn against&lt;/strong&gt; &lt;strong&gt;taking a leap into&lt;/strong&gt; the unknown Manipulating DNA for our benefit really is ‘&lt;strong&gt;Playing God&lt;/strong&gt;’, and could &lt;strong&gt;come back to haunt us&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: Imagine we genetically engineer some crops and the changes &lt;strong&gt;lead to&lt;/strong&gt; undesirable results; those changes might be &lt;strong&gt;impossible to reverse&lt;/strong&gt;, and have a &lt;strong&gt;disastrous&lt;/strong&gt; effect on the environment.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: It’s a &lt;strong&gt;slippery slope&lt;/strong&gt;, with &lt;strong&gt;serious consequences&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Prof. Goldman: Once we start making changes to human DNA, &lt;strong&gt;who knows what terrible results it could have on our health in the future?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prof. Goldman: We really shouldn’t be &lt;strong&gt;playing around&lt;/strong&gt; with technology we don’t fully understand yes.&lt;/p&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Prof. Gilbert: Making use of this technology will instantly benefit some of the poorest people on Earth. Drought-resistant crops will solve the problem of hunger in the developing world.</summary></entry><entry><title type="html">Negotiating a better deal</title><link href="https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal/" rel="alternate" type="text/html" title="Negotiating a better deal" /><published>2021-02-04T00:00:00+08:00</published><updated>2021-02-04T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/04/Negotiating-A-Better-Deal/">&lt;ul&gt;
  &lt;li&gt;Target point: The Best result to make a deal.&lt;/li&gt;
  &lt;li&gt;Benchmark: The middle result to make a deal.&lt;/li&gt;
  &lt;li&gt;Resistance point: The worst result to make a deal.&lt;/li&gt;
  &lt;li&gt;Bargaining range: From resistance point to target point.&lt;/li&gt;
  &lt;li&gt;Interests: The foundamental reason of a negotiation.&lt;/li&gt;
  &lt;li&gt;Position: Current level.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Target point: The Best result to make a deal. Benchmark: The middle result to make a deal. Resistance point: The worst result to make a deal. Bargaining range: From resistance point to target point. Interests: The foundamental reason of a negotiation. Position: Current level.</summary></entry><entry><title type="html">Describing our job skills</title><link href="https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills/" rel="alternate" type="text/html" title="Describing our job skills" /><published>2021-02-03T00:00:00+08:00</published><updated>2021-02-03T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/03/Describing-Our-Job-Skills/">&lt;h1 id=&quot;skills&quot;&gt;Skills&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;People skills&lt;/p&gt;

    &lt;p&gt;John is extremely likeable and he gets along well with his colleagues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Speaking skills&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Teamwork&lt;/p&gt;

    &lt;p&gt;He is happy to cooperate with others.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Writing skills&lt;/p&gt;

    &lt;p&gt;His reports are well organized and easy to understand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Budget management&lt;/p&gt;

    &lt;p&gt;He finishes his project without exceeding his budget.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Organization&lt;/p&gt;

    &lt;p&gt;He finishes his project without going beyond his spending limit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Creativity&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Problem solving&lt;/p&gt;

    &lt;p&gt;When things go wrong, he relies on his teammates to find the answers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stress management&lt;/p&gt;

    &lt;p&gt;He has difficulty working under pressure, and this can affect his work.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;some-describes&quot;&gt;Some describes&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;You get along well with some of your colleague, but not all of them.&lt;/li&gt;
  &lt;li&gt;Being confident is something that comes naturally to you.&lt;/li&gt;
  &lt;li&gt;Your boss encourages you to think outside the box.&lt;/li&gt;
  &lt;li&gt;You don’t usually take the initiative at work: you wait for the boss to tell you what to do.&lt;/li&gt;
  &lt;li&gt;You need to become more efficient in your work.&lt;/li&gt;
  &lt;li&gt;You have a skill that give you the ability to communicate effectively.&lt;/li&gt;
  &lt;li&gt;You can cooperate with others, but you don’t like to rely on them.&lt;/li&gt;
  &lt;li&gt;I am trying to stay up to date with the latest developments in my field.&lt;/li&gt;
  &lt;li&gt;I’m behind on answering my emails, now I’m trying to get up to date.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Skills</summary></entry><entry><title type="html">Talking about career paths</title><link href="https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths/" rel="alternate" type="text/html" title="Talking about career paths" /><published>2021-02-02T00:00:00+08:00</published><updated>2021-02-02T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths</id><content type="html" xml:base="https://pfcstyle.github.io/2021/02/02/Talking-about-career-paths/">&lt;ol&gt;
  &lt;li&gt;Mark: Hey, Jane! Can I ask you a question?&lt;/li&gt;
  &lt;li&gt;Jane: Sure, What’s up?&lt;/li&gt;
  &lt;li&gt;Mark: Well, I’m going to be graduating soon, so I’ll be applying for jobs, but I’m not sure which jobs to choose. My parents say I should choose the company that pays the most but …&lt;/li&gt;
  &lt;li&gt;Jane: But your’re worried that &lt;strong&gt;you’re going to end up with a boss you hate?&lt;/strong&gt;
    &lt;blockquote&gt;
      &lt;p&gt;you’re going to get the result in the end with…&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Mark: Yeah! Do you have any suggestions?&lt;/li&gt;
  &lt;li&gt;Jane: Sure. Several things to &lt;strong&gt;keep in mind&lt;/strong&gt;. First, do some research about the company. What are the chances that you’ll get a promotion if you &lt;strong&gt;stay with the company long-term&lt;/strong&gt;? Also, where’s the company located? How long will the &lt;strong&gt;commute&lt;/strong&gt; be? And of course the salary is important. &lt;strong&gt;Rather than&lt;/strong&gt; thinking about which company pays the most &lt;strong&gt;though&lt;/strong&gt;, find out which company pays you enough to live the life you want to live. However, &lt;strong&gt;none of this guarantees(there’s no promise)&lt;/strong&gt; that you’re going to like your boss, but at least you’ll like everything else about the job if that happens.&lt;/li&gt;
  &lt;li&gt;Mark: Wow! &lt;strong&gt;You’ve given me a lot to think about.&lt;/strong&gt; Thanks!&lt;/li&gt;
  &lt;li&gt;Jane: Glad I could be of help!&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Mark: Hey, Jane! Can I ask you a question? Jane: Sure, What’s up? Mark: Well, I’m going to be graduating soon, so I’ll be applying for jobs, but I’m not sure which jobs to choose. My parents say I should choose the company that pays the most but … Jane: But your’re worried that you’re going to end up with a boss you hate? you’re going to get the result in the end with… Mark: Yeah! Do you have any suggestions? Jane: Sure. Several things to keep in mind. First, do some research about the company. What are the chances that you’ll get a promotion if you stay with the company long-term? Also, where’s the company located? How long will the commute be? And of course the salary is important. Rather than thinking about which company pays the most though, find out which company pays you enough to live the life you want to live. However, none of this guarantees(there’s no promise) that you’re going to like your boss, but at least you’ll like everything else about the job if that happens. Mark: Wow! You’ve given me a lot to think about. Thanks! Jane: Glad I could be of help!</summary></entry><entry><title type="html">spatialite-android-sdk的编译和使用</title><link href="https://pfcstyle.github.io/2016/12/29/spatialite-android/" rel="alternate" type="text/html" title="spatialite-android-sdk的编译和使用" /><published>2016-12-29T00:00:00+08:00</published><updated>2016-12-29T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2016/12/29/spatialite-android</id><content type="html" xml:base="https://pfcstyle.github.io/2016/12/29/spatialite-android/">&lt;blockquote&gt;
  &lt;p&gt;好记性不如烂笔头&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;项目用到spatialite,记录下使用方法&lt;/p&gt;

&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;环境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有android studio就行了&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源码下载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果想使用最新版本，去google&lt;a href=&quot;https://code.google.com/archive/p/spatialite-android/&quot;&gt;下载&lt;/a&gt;源码吧。&lt;/p&gt;

&lt;p&gt;我这里提供博客日期为止最新的&lt;a href=&quot;https://github.com/pfcstyle/spatialite-android&quot;&gt;源码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里还有已经把所有的坑填上了&lt;a href=&quot;https://github.com/pfcstyle/spatialite-android-gradle&quot;&gt;完整工程&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;开始编译&quot;&gt;开始编译&lt;/h1&gt;

&lt;h2 id=&quot;使用android-studio打开项目&quot;&gt;使用android studio打开项目&lt;/h2&gt;

&lt;p&gt;File=&amp;gt;New=&amp;gt;import project&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/open-spatialite.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;会报一些错误直接贴图&quot;&gt;会报一些错误，直接贴图&lt;/h3&gt;

&lt;p&gt;缺少compile-sdk 版本&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/open-spatialite.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最小skd版本设置错误&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-29/sp-vmin-bug.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;package-name重复
&lt;img src=&quot;/img/post/2016-12-29/package-name.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;缺少ndk编译模块&lt;/p&gt;

&lt;p&gt;这个首先你应该已经安装了ndk,这个我就不多说了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/sourceSets.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/property.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时候sync gradle应该就没有问题了&lt;/p&gt;

&lt;h3 id=&quot;配置工程&quot;&gt;配置工程&lt;/h3&gt;

&lt;p&gt;我没有重新去打包so文件，在&lt;a href=&quot;https://code.google.com/archive/p/spatialite-android/&quot;&gt;这里&lt;/a&gt;有具体的打包流程。但是我有尝试过，确实是很麻烦的一件事，工程中没有完整的make文件，依赖都需要自己去管理，我直接去网上找到了合适的&lt;a href=&quot;http://pan.baidu.com/s/1c25jTfi&quot;&gt;so文件&lt;/a&gt;。&lt;strong&gt;如果你是自己找的so文件，那么，一定要确定是ndk-r8以上版本编译的，否则会有text alloc…类似的错误&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/sp-jnilibs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;删除掉demo app目录下的Google Map相关的类，因为需要配置api_key,而且现在google map好像都已经完全更新了，不知道接口变了没有，要验证spatialite 是否成功并不需要展示到map上，所以删除掉&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MappingActivity.java&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MapSelectionOverlay.java&lt;/code&gt;两个类文件,记得修改清单文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AndroidManifest.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/delete-java.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在已经可以编译成功并运行了。但是现在只能在32bit的安卓机上运行，因为so只有32bit的，64bit的机子会找错文件夹，需要再设置一下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/post/2016-12-29/abifilter.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后再运行就没有任何问题了。&lt;/p&gt;

&lt;h1 id=&quot;spatialite-android-sdk-的使用&quot;&gt;spatialite-android-sdk 的使用&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;首先在build/outputs中找到aar文件，具体aar怎么用可以参考我的&lt;a href=&quot;http://pfcstyle.me/2016/12/28/mapbox-compile/&quot;&gt;上篇&lt;/a&gt;博客。&lt;/li&gt;
  &lt;li&gt;下载&lt;a href=&quot;http://www.gaia-gis.it/gaia-sins/windows-bin-amd64/&quot;&gt;spatialite-gui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;普及一下spatialite的基础知识&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spatialite&amp;gt; select spatialite_version();
4.0.0
spatialite&amp;gt; select proj4_version();
Rel. 4.8.0, 6 March 2012
spatialite&amp;gt; select geos_version();
3.3.6-CAPI-1.7.6
spatialite&amp;gt; select lwgeom_version();
2.0.2
spatialite&amp;gt; select HasIconv();
1
spatialite&amp;gt; select HasMathSQL();
1
spatialite&amp;gt; select HasGeoCallbacks();
1
spatialite&amp;gt; select HasProj();
1
spatialite&amp;gt; select HasGeos();
1
spatialite&amp;gt; select HasGeosAdvanced();
1
spatialite&amp;gt; select HasGeosTrunk();
0
spatialite&amp;gt; select HasLwGeom();
1
spatialite&amp;gt; select HasEpsg();
1
spatialite&amp;gt; select HasFreeXL();
1

輸入由 WGS84 為基準的經緯度（4326 是 WGS84 2D 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(MakePoint(114.1689,22.4518,4326));
POINT(114.1689 22.4518)

將它轉換為 WGS84 UTM 50N 格網座標（32650 是 WGS84 / UTM zone 50N 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(ST_Transform(MakePoint(114.1689,22.4518,4326),32650));
POINT(208621.605201 2485587.067636)

將它轉換為 HK1980 格網座標（2326 是 Hong Kong 1980 Grid System 的 EPSG CRS SRID 編號）：
spatialite&amp;gt; select AsText(ST_Transform(MakePoint(114.1689,22.4518,4326),2326));
POINT(835447.180293 834705.40192)

利用格網座標計算大埔中心至九龍坑山的距離：
spatialite&amp;gt; select ST_Distance(MakePoint(208838.738969, 2488246.942923), MakePoint(208621.605201, 2485587.067636));
2668.72321824495

利用經緯度計算大埔中心至九龍坑山的距離：
spatialite&amp;gt; select ST_Length(MakeLine(MakePoint(114.17052, 22.475837,4326), MakePoint(114.1689,22.4518,4326)), 1);
2666.99235712016


計算大埔中心至九龍坑山的方位角：
spatialite&amp;gt; select Degrees(ST_Azimuth(MakePoint(114.1689,22.4518,4326), MakePointZ(114.17052, 22.475837, 437.639187, 4326)));
3.85568120514838

輸出九龍坑山三角網測站的 KML：
spatialite&amp;gt; select AsKml(&quot;Cloudy Hill&quot;, &quot;description&quot;, MakePointZ( 835614.056, 837367.172, 440.8, 2326));
&amp;lt;Placemark&amp;gt;&amp;lt;name&amp;gt;Cloudy Hill&amp;lt;/name&amp;gt;&amp;lt;description&amp;gt;description&amp;lt;/description&amp;gt;&amp;lt;Point&amp;gt;&amp;lt;coordinates&amp;gt;114.170519962613,22.47583709798935,437.6391865937039&amp;lt;/coordinates&amp;gt;&amp;lt;/Point&amp;gt;&amp;lt;/Placemark&amp;gt;

點的 Union：
spatialite&amp;gt; select astext(ST_Union(MakePoint(114.17052, 22.475837,4326), MakePoint(114.1689,22.4518,4326)));
MULTIPOINT(114.17052 22.475837, 114.1689 22.4518)

創建有地理數據的表，先是一般格式的欄：
spatialite&amp;gt; CREATE TABLE TestTable(
id INTEGER PRIMARY KEY AUTOINCREMENT,
Name TEXT NOT NULL);

創建該地理數據欄，儲存以 WGS84 為基準的點：
spatialite&amp;gt; SELECT AddGeometryColumn('TestTable', 'Geometry', 4326, 'POINT', 'XY');
1

加入 R* index，以加快檢索：(添加索引)
spatialite&amp;gt; SELECT CreateSpatialIndex('TestTable', 'Geometry');
1

加入點數據：
spatialite&amp;gt; insert into TestTable (Name, Geometry) VALUES (&quot;a&quot;, MakePoint(114.1689,22.4518,4326));
spatialite&amp;gt; insert into TestTable (Name, Geometry) VALUES (&quot;b&quot;, MakePoint(114.17052,22.475837,4326));

列出數據（Geometry 未能直接顯示）：
spatialite&amp;gt; select * from TestTable;
1|a|
2|b|

列出數據：
spatialite&amp;gt; select id, Name, AsText(Geometry) from TestTable;
1|a|POINT(114.1689 22.4518)
2|b|POINT(114.17052 22.475837)

利用 R* index 查出在 22.4518N 114.1689E, 22.4520N 114.1690E 內的點：
spatialite&amp;gt; SELECT  id, Name, AsText(Geometry) FROM TestTable WHERE ROWID IN (SELECT pkid FROM idx_TestTable_Geometry WHERE pkid MATCH RTreeIntersects(114.1689,22.4518,114.1690,22.4520));
1|a|POINT(114.1689 22.4518)

將點數據轉成 GeoHash（可以文字方式儲存於一般資料庫，以方便查詢某一點附近的其他點）：
spatialite&amp;gt; SELECT Name, GeoHash(Geometry) FROM TestTable;
a|wecptzpr0ny5c1eeemw3
b|wecpy587jztypffhy099
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;sdk的简单使用，我直接按照demo理一下。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//上面这些获取数据库路径的代码就省略了
...

// 1.
//Open the database 打开数据库
jsqlite.Database db = new jsqlite.Database();
db.open(dbFile.toString(), jsqlite.Constants.SQLITE_OPEN_READONLY);

// 2.
// Test prepare statements  测试下准备好了没有？我的理解就是查询一下数据库的基本状态和信息，可能真正使用时也是用不到的。
String query = &quot;SELECT name, peoples, AsText(Geometry) from Towns where peoples &amp;gt; 350000&quot;;
Stmt st = db.prepare(query);
st.step();
st.close();

// 3.测试各种查询  你们也可以把我上面简单介绍的其他命令拿来测试下
// Test various queries
db.exec(&quot;select Distance(PointFromText('point(-77.35368 39.04106)', 4326), PointFromText('point(-77.35581 39.01725)', 4326));&quot;,
		cb);
db.exec(&quot;SELECT name, peoples, AsText(Geometry), GeometryType(Geometry), NumPoints(Geometry), SRID(Geometry), IsValid(Geometry) from Towns where peoples &amp;gt; 350000;&quot;,
		cb);
db.exec(&quot;SELECT Distance( Transform(MakePoint(4.430174797, 51.01047063, 4326), 32631), Transform(MakePoint(4.43001276, 51.01041585, 4326),32631));&quot;,
		cb);

		
// 4.
// Close the database 搞完了就关闭
db.close();


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后，这里还有一个&lt;a href=&quot;https://www.gaia-gis.it/fossil/libspatialite/wiki?name=spatialite-android-tutorial&quot;&gt;官方的tutorial&lt;/a&gt;，虽然很老了，但是api基本没变化，大家可以找到更多关于使用spatialite的使用方法。感兴趣的可以看下。&lt;/p&gt;

&lt;p&gt;好了，就到这里了。&lt;/p&gt;</content><author><name>PfCStyle</name></author><category term="Android" /><summary type="html">好记性不如烂笔头</summary></entry><entry><title type="html">记mapbox-android-sdk的修改编译过程</title><link href="https://pfcstyle.github.io/2016/12/28/mapbox-compile/" rel="alternate" type="text/html" title="记mapbox-android-sdk的修改编译过程" /><published>2016-12-28T00:00:00+08:00</published><updated>2016-12-28T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2016/12/28/mapbox-compile</id><content type="html" xml:base="https://pfcstyle.github.io/2016/12/28/mapbox-compile/">&lt;blockquote&gt;
  &lt;p&gt;好记性不如烂笔头&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;接到一个android地图项目，准备使用&lt;a href=&quot;https://www.mapbox.com/&quot;&gt;mapbox&lt;/a&gt;作为底图。但是有些地方需要修改一下，主要是读取一些自己的数据等，所以这里得重新编译so及sdk。本篇不会记录如何修改，更不会去讲C++相关的任何知识，只是记录编译过程。
如果你是需要编译其他平台的sdk,看完本篇，也是完全没有问题的。&lt;/p&gt;

&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;环境&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;mac OS X EI Capitan(Command)&lt;/li&gt;
  &lt;li&gt;or Linux(Command)&lt;/li&gt;
  &lt;li&gt;or windows Cygwin&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本人使用的是环境1。&lt;/p&gt;

&lt;p&gt;另外，一个建议是，mac的硬盘比较小，我的是128的固态，编译完成可能有10多G，所以，我最后是把工程放到了移动硬盘里，也建议大家这样做(在编译开始前你就该放到移动硬盘里，否则会因为路径的问题，导致下载的好的包及配置文件失效)。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;源码下载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;a href=&quot;https://github.com/mapbox/mapbox-gl-native&quot;&gt;github&lt;/a&gt;下载源码。仓库tag和branch很多，clone的话很费时间，我个人的建议是选择一个tag或者分支就可以了，直接download zip比较快。
我这里选择的是&lt;a href=&quot;https://github.com/mapbox/mapbox-gl-native/archive/release-android-v4.2.1.zip&quot;&gt;android-v4.2.1&lt;/a&gt;,这是当前最新的android分支。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置必要的环境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;既然是要编译android sdk,那么，基础的android的环境配置是肯定要配置好的。主要是两个环境变量:&lt;/p&gt;

&lt;p&gt;在主要是两个环境变量:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANDROID_HOME&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NDK&lt;/code&gt;的路径。&lt;/p&gt;

&lt;p&gt;在&lt;em&gt;~/bash_profile&lt;/em&gt;的末尾添加：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//当然  这里是我的路径  大家如果和我的不同  记得换啊
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ANDROID_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/Users/developer/Library/Android/sdk
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/tools:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/platform-tools
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/Users/developer/Library/Android/sdk/ndk-bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;开始编译&quot;&gt;开始编译&lt;/h1&gt;

&lt;p&gt;可以开始编译了。使用终端进入&lt;em&gt;mapbox-gl-native&lt;/em&gt;(这个名字不是固定的，你下载源码的方式和版本不同，名称都是不一样的，新手不必纠结)的根目录。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Downloads/mapbox-gl-native-release-android-v4.2.1
make android
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不同make命令对应的cpu平台不同，如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android=&amp;gt;armeabi-v7

android-lib-$1:

$1=&amp;gt;(arm-v5 arm-v7 arm-v8 x86 x86-64 mips)

arm-v8 =&amp;gt; arm64-v8a

arm-v7 =&amp;gt; armeabi-v7a

arm-v5 =&amp;gt; armeabi

x86 =&amp;gt; x86

x86-64 =&amp;gt; x86_64

mips =&amp;gt; mips

如：make android-lib-x86

如果想编译全部平台:

make apackage (编译android所有cpu架构,建议使用这个)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这些都可以从根目录的&lt;strong&gt;makefile&lt;/strong&gt;文件里得到，这里粘贴makefile的一部分文件。&lt;/p&gt;

&lt;div class=&quot;language-makefile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#### Android targets ###########################################################
&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ANDROID_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; platform/android/scripts/toolchain.sh
&lt;span class=&quot;nv&quot;&gt;ANDROID_ABIS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; arm-v5 arm-v7 arm-v8 x86 x86-64 mips

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;style-code-android&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;style-code-android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;$(BUILD_DEPS)&lt;/span&gt;
	node platform/android/scripts/generate-style-code.js

&lt;span class=&quot;err&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ANDROID_RULES&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;build/android-$1/$(BUILDTYPE)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;style-code-android&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; build/android-&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;build/android-$1/$(BUILDTYPE)/toolchain.cmake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;platform/android/scripts/toolchain.sh build/android-$1/$(BUILDTYPE)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(ANDROID_ENV)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; build/android-&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt;/toolchain.cmake

&lt;span class=&quot;nl&quot;&gt;build/android-$1/$(BUILDTYPE)/Makefile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build/android-$1/$(BUILDTYPE)/toolchain.cmake platform/android/config.cmake&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;build/android-&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cmake ../../.. &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; Ninja &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;-DCMAKE_TOOLCHAIN_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;build/android-&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt;/toolchain.cmake &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;-DCMAKE_BUILD_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;-DCMAKE_EXPORT_COMPILE_COMMANDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ON &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;-DMBGL_PLATFORM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;android

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-lib-$1&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android-lib-$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build/android-$1/$(BUILDTYPE)/Makefile&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(NINJA)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(NINJA_ARGS)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(JOBS)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; build/android-&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt; all

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-$1&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android-$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-lib-$1&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;platform/android &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./gradlew &lt;span class=&quot;nt&quot;&gt;--parallel&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--max-workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(JOBS)&lt;/span&gt; assemble&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;apackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-lib-$1&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;endef&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$(foreach&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;abi,$(ANDROID_ABIS),$(eval&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$(call&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ANDROID_RULES,$(abi))))&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-arm-v7&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-test&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android-test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;platform/android &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./gradlew testDebugUnitTest &lt;span class=&quot;nt&quot;&gt;--continue&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-test-apk&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android-test-apk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;platform/android &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./gradlew assembleDebug &lt;span class=&quot;nt&quot;&gt;--continue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./gradlew assembleAndroidTest &lt;span class=&quot;nt&quot;&gt;--continue&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apackage&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;apackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;platform/android &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./gradlew &lt;span class=&quot;nt&quot;&gt;--parallel-threads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(JOBS)&lt;/span&gt; assemble&lt;span class=&quot;nv&quot;&gt;$(BUILDTYPE)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;android-generate-test&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;android-generate-test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	node platform/android/scripts/generate-test-code.js

&lt;span class=&quot;c&quot;&gt;#### Miscellaneous targets #####################################################
&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;style-code&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;style-code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	node scripts/generate-style-code.js

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; ./build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	        ./platform/android/MapboxGLAndroidSDK/build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	        ./platform/android/MapboxGLAndroidSDKTestApp/build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	        ./platform/android/MapboxGLAndroidSDK/src/main/jniLibs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	        ./platform/android/MapboxGLAndroidSDKTestApp/src/main/jniLibs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	        ./platform/android/MapboxGLAndroidSDK/src/main/assets

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;distclean&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;distclean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; ./mason_packages
	&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; ./node_modules

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.PHONY:&lt;/code&gt;后面的就是各种命令。其他平台类似。&lt;/p&gt;

&lt;p&gt;先打针强心剂，在编译过程中，需要下载很多依赖，我在编译完成之后，整个文件夹有10.58G…我用了一整晚。&lt;/p&gt;

&lt;p&gt;这样如果顺利的话，编译so就完成了。但是可能会有问题，看末尾问题解释。&lt;/p&gt;

&lt;p&gt;另外说下，编译完成后，so文件在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mapbox-gl-native/platform/android/MapboxGLAndroidSDK/src/main/jniLibs&lt;/code&gt;下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/jniLibs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mapbox-android-sdk-的打包和使用&quot;&gt;mapbox-android-sdk 的打包和使用&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;打包&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用android studio打开platform下的android工程&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/open-android.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后直接运行就好了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/open-android-after.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在build的output下就可以找到aar文件了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/cp-after.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用aar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里我直接还以上述android工程里的测试工程为例。&lt;/p&gt;

&lt;p&gt;** 拷贝aar到目标工程的libs(没有自己创建)下&lt;/p&gt;

&lt;p&gt;这里我将aar重命名了一下，大家随意，后有图。&lt;/p&gt;

&lt;p&gt;** 配置builid.gradle&lt;/p&gt;

&lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;err&quot;&gt;···&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flatDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dirs&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'libs'&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    compile(project(':MapboxGLAndroidSDK')) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//        transitive = true&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//    }&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mapbox-android-sdk-4.2.1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;ext:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'aar'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;err&quot;&gt;···&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//mapbox aar dependences&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.squareup.okhttp3:okhttp:3.4.1'&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Exclude Guava to avoid an unnecessary transitive dependency&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// See: https://github.com/mapbox/mapbox-gl-native/issues/7129&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'com.mapzen.android:lost:1.1.1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;group:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.google.guava'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Mapbox Android Services&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'com.mapbox.mapboxsdk:mapbox-java-services:1.3.1@jar'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;transitive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//mapbox aar dependences&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;···&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/cp-config.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;需要说下的是，打包的aar不会自动打包依赖，&lt;strong&gt;除非是你自己手动添加对应的依赖aar或者jar到目录下&lt;/strong&gt;，只是用gradle管理依赖的话，是不会自动打包到aar中的。&lt;/p&gt;

&lt;p&gt;** 记得添加上access_token&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2016-12-28/access_token.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;问题解释&quot;&gt;问题解释&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;某个包总是下载失败&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我想说的是，多试几次，有代理，vpn什么的都连上，多试几次。从终端输出里可以看出来，这些包都是aws上的，但是亚马逊的服务器对我们来说太不稳定了，所以，试试vpn什么的，会好很多。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在x86等手机上提示找不到so&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你是用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make android&lt;/code&gt;命令来编译的，那么就只有arm-v7的so,64bit的运行没有问题(没有全部测试，用三星S7 edge测试没有问题)，但其他32bit平台就不行了，所以建议你编译上其他平台的包。使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make apackage&lt;/code&gt;编译。&lt;/p&gt;

&lt;p&gt;很多问题在前面步骤中已经自动避过了，现在反而没什么需要多说了，祝好运吧。&lt;/p&gt;</content><author><name>PfCStyle</name></author><category term="Android" /><summary type="html">好记性不如烂笔头</summary></entry><entry><title type="html">Android-Animation-Gesture</title><link href="https://pfcstyle.github.io/2016/11/17/Animation-Gesture/" rel="alternate" type="text/html" title="Android-Animation-Gesture" /><published>2016-11-17T00:00:00+08:00</published><updated>2016-11-17T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2016/11/17/Animation-Gesture</id><content type="html" xml:base="https://pfcstyle.github.io/2016/11/17/Animation-Gesture/">&lt;blockquote&gt;
  &lt;p&gt;代码就像DNA,随机组合过程中总会出现毛病。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;animation&quot;&gt;Animation&lt;/h1&gt;

&lt;p&gt;这里不会介绍动画的详细用法，只是记录一些小问题。&lt;/p&gt;

&lt;h3 id=&quot;动画无效&quot;&gt;动画无效&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;//这里要时刻注意，你传进去要变化的动画纬度参数是否是正确的&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;TranslateAnimation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TranslateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;        
&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAnimationListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimationListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;            
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;                
	&lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;            
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;   
   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationEnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;   
   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationRepeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){}&lt;/span&gt;        
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;        
&lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意上述代码，在动画开始时，使mEditView显示，在动画前，它是隐藏的。这里需要注意的是，如果你在xml文件中(或者使用代码)设置的是gone，而不是invisible，那么，你在设置动画参数时，传入的mEditView.getHeight()就是0，从而导致没有动画发生。&lt;/p&gt;

&lt;h3 id=&quot;动画之后出现异常情况&quot;&gt;动画之后出现异常情况&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nc&quot;&gt;TranslateAnimation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TranslateAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//注意这里，如果设为true，动画结束后，将会强制保持结束时的状态。&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//animation.setFillAfter(true);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAnimationListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimationListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;            
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationEnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 		&lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;INVISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationRepeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Animation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mEditView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里是隐藏的动画，在上面&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//animation.setFillAfter(true);&lt;/code&gt;这句，会导致&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onAnimationEnd&lt;/code&gt;中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mEditView.setVisibility(View.INVISIBLE);&lt;/code&gt;无效，准确来说，mEditView保持了动画结束的状态，在屏幕外面。&lt;/p&gt;

&lt;p&gt;但是，不仅如此，setFillAfter(true)这句，还使得事件与view分离了。所以，你往往会点到一些看起来诡异的东西。&lt;/p&gt;

&lt;h1 id=&quot;gesture&quot;&gt;Gesture&lt;/h1&gt;

&lt;h3 id=&quot;view自身具有的手势监听已经很全面了&quot;&gt;view自身具有的手势监听已经很全面了。&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mHeaderView.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent motionEvent) {
);
            switch (motionEvent.getAction()) {
                case MotionEvent.ACTION_DOWN: {
                    
              	    final float y = motionEvent.getY();
                    Log.d(&quot;downY:&quot;+y);
                    // Remember where we started (for dragging)
                    mLastTouchY = y;
                    // Save the ID of this pointer (for dragging)
                    break;
                }
                    
                case MotionEvent.ACTION_MOVE: {
                    // Find the index of the active pointer and fetch its position
                    final float y = motionEvent.getY();
                    Log.d(&quot;downY:&quot;+mLastTouchY+&quot;===moveY:&quot;+y);
                    
                    // Only move if the ScaleGestureDetector isn't processing a gesture.
                    //                                        if (!mScaleDetector.isInProgress()) {
                    // Calculate the distance moved
                    //                                        final float dx = x - mLastTouchX;
                    final float dy = y - mLastTouchY;
                    
                    RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) mQueryListView.getLayoutParams();
                    params.topMargin = (int) (params.topMargin+dy);
                    mQueryListView.setLayoutParams(params);
                    
                    break;
                }
                    
                case MotionEvent.ACTION_UP: {

                    break;
                }
            }
            return true;
        }
    });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里展示的是使用一个手指上下拖动view的事例。注意，这里监听的是一个控件，而不是整个window。在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACTION_MOVE&lt;/code&gt;中，拿到的y是你的手指在目标view中的坐标，因此，这里只需要减去&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACTION_DOWN&lt;/code&gt;时的初始坐标，就能得到每次需要移动的距离。&lt;/p&gt;

&lt;p&gt;注意，目标view随着你的手指在移动，所以，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACTION_MOVE&lt;/code&gt;中拿到的y一般波动很小，因为你的手指可能一直在目标view的同一个位置。&lt;/p&gt;

&lt;p&gt;你的手指每移动1像素，目标view就会跟随移动1像素。&lt;/p&gt;

&lt;h3 id=&quot;gesturedetector&quot;&gt;GestureDetector&lt;/h3&gt;

&lt;p&gt;在遇到极其复杂的交互情况，可能会需要使用到这里的手势监听器。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mGestureDetector = new GestureDetector(mActivity,UpdateFeaturesProtocol.this);
//这里需要注意，必须设置这一句，否则在GestureDetector的实现中，只能响应down,press,longpress三个事件mHeaderView.setLongClickable(true);
mHeaderView.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent motionEvent) {
                return mGestureDetector.onTouchEvent(motionEvent);
        }
    });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面是对&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OnGestureListener&lt;/code&gt;的实现&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private float startPointY;
    
    /**
     * Gesture
     * @param motionEvent
     * @return
     */
    //点下时响应  第一个响应
    @Override
    public boolean onDown(MotionEvent motionEvent) {
        Log.d(&quot;down==&amp;gt;e2.x:&quot;+motionEvent.getX()+&quot;====e2.y:&quot;+motionEvent.getY());
        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) mQueryListView.getLayoutParams();
        startPointY = motionEvent.getY();
        return false;
    }
    
    //几乎跟down一样，但是在down后
    //比如down响应需要0.1s,那么press需要0.2s
    //如果你的手指接触屏幕时间不足0.2s，该事件不会响应
    //这里的0.1s和0.2s皆为假设，没有测过
    @Override
    public void onShowPress(MotionEvent motionEvent) {
        Log.d(&quot;press==&amp;gt;e2.x:&quot;+motionEvent.getX()+&quot;====e2.y:&quot;+motionEvent.getY());
        
    }
    
    //单击
    @Override
    public boolean onSingleTapUp(MotionEvent motionEvent) {
        Log.d(&quot;singletap==&amp;gt;e2.x:&quot;+motionEvent.getX()+&quot;====e2.y:&quot;+motionEvent.getY());
        return false;
    }
    
    //滚动 在手指滑动过程中一直响应
    @Override
    public boolean onScroll(MotionEvent motionEvent, MotionEvent motionEvent1, float v, float v1) {
        Log.d(&quot;scroll==&amp;gt;e2.y:&quot;+motionEvent1.getY()+&quot;===e1.y:&quot;+motionEvent.getY()+&quot;distanceY:&quot;+v1);
        RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) mQueryListView.getLayoutParams();
        params.topMargin = (int) (params.topMargin + (motionEvent1.getY()-startPointY));
        mQueryListView.setLayoutParams(params);
        return false;
    }
    
    //长按
    @Override
    public void onLongPress(MotionEvent motionEvent) {
        Log.d(&quot;longpress==&amp;gt;e2.x:&quot;+motionEvent.getX()+&quot;====e2.y:&quot;+motionEvent.getY());
    }
    
    //扔？
    //此事件是指用手指快速滑动并快速抬起的情况
    //注意，此事件在scoll后是不一定响应的。
    @Override
    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
                           float velocityY) {
        Log.d(&quot;fling==&amp;gt;e2.x:&quot;+e2.getX()+&quot;====e2.y:&quot;+e2.getY());
        
        return false;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;功能和直接使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mHeaderView.setOnTouchListener&lt;/code&gt;完全一样，思路也是完全一样的。解释都在代码注释里。&lt;/p&gt;

&lt;p&gt;需要注意的是里面没有监听手指抬起的地方，所以你还需要回到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setOnTouchListener&lt;/code&gt;中使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACTION_UP&lt;/code&gt;&lt;/p&gt;</content><author><name>PfCStyle</name></author><category term="Android" /><summary type="html">代码就像DNA,随机组合过程中总会出现毛病。</summary></entry><entry><title type="html">OOP-Six-Principles</title><link href="https://pfcstyle.github.io/2016/11/14/OOP-principles/" rel="alternate" type="text/html" title="OOP-Six-Principles" /><published>2016-11-14T00:00:00+08:00</published><updated>2016-11-14T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2016/11/14/OOP-principles</id><content type="html" xml:base="https://pfcstyle.github.io/2016/11/14/OOP-principles/">&lt;blockquote&gt;
  &lt;p&gt;面对正确的事物，我们往往无法确定它是正确的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;面向对象的六大原则&quot;&gt;面向对象的六大原则&lt;/h1&gt;

&lt;h3 id=&quot;单一职责原则single-responsibility-principle&quot;&gt;单一职责原则(Single Responsibility Principle)&lt;/h3&gt;

&lt;p&gt;这一原则虽然简单，但其实争议最大，也是最难以界定的。一个类只应该做自己职责范围内的事，这个职责本身就很难确定，是功能职责？是架构职责？还是其他什么职责？每一个程序员心中可能都有不同的界定。&lt;/p&gt;

&lt;p&gt;假定我们以功能职责为标准，类比经理(一般manager类)，作为一把手，是不是什么事都要亲自去做？那么其实其他人(财务，市场等)的职能是否都属于经理呢？这样显然不合理，各种事都该各个部门分别去做，然后经理来同意指挥协调(manager去调用各个实现类的方法)。&lt;/p&gt;

&lt;p&gt;其实这是六大原则中的另外一种原则了，我想说的事，这个原则，大家需要靠自己的实践经验去形成自己的风格，没有真正的对错，只要你的风格稳定不变。&lt;/p&gt;

&lt;h3 id=&quot;开闭原则open-close-principle&quot;&gt;开闭原则(Open Close Principle)&lt;/h3&gt;

&lt;p&gt;这也是一个很基础的设计原则，对扩展，开放；对修改，封闭。&lt;/p&gt;

&lt;p&gt;一个项目，免不了维护和升级。而在维护升级时，为了避免引入新的bug，我们应该尽量扩展新的功能，而不是直接在旧代码中进行修改。&lt;/p&gt;

&lt;p&gt;当然，这只是理想的情景，实际上我们很多时候都不得不去修改旧的代码。但我们也应该尽可能的避免。&lt;/p&gt;

&lt;p&gt;避免的方法就是使用开闭原则，尽可能的去覆写父类的方法，或者尽可能的去设计公共接口，然后去实现它们。&lt;/p&gt;

&lt;h3 id=&quot;里氏替换原则liskov-substitution-principle&quot;&gt;里氏替换原则(Liskov Substitution Principle)&lt;/h3&gt;

&lt;p&gt;简单来说，在我们进行组合依赖时，应该尽可能的依赖的是借口或者父类(包括抽象类)，这样我们在覆写了父类或者是实现类借口的方法之后，就可以在使用时随意的替换。&lt;/p&gt;

&lt;p&gt;比如现在经理辞职换了一个人，经理职权不变，但是每个人行使职权的风格和方式却是不同的，这个经理只需要重新实现接口，就可以用自己的风格去快速执掌公司类。&lt;/p&gt;

&lt;h3 id=&quot;依赖倒置原则depedence-inversion-principle&quot;&gt;依赖倒置原则(Depedence Inversion Principle)&lt;/h3&gt;

&lt;p&gt;这个，简单解释就是接口去决定细节实现。高层次的模块不去关心低层次的细节实现，而是设计类各种接口去掉用。而低层次模块则是根据高层次的调用的接口去实现细节。&lt;/p&gt;

&lt;p&gt;比如，经理管理财务方面，要看财务报表，于是定义了一个看财务报表的接口，那么下面的财务部就得去实现这个接口，提供财务报表。至于这个财务报表，是机器统计的还是会计自己画的，经理是不会关心的。&lt;/p&gt;

&lt;h3 id=&quot;接口隔离原则interfacesegregation-principles&quot;&gt;接口隔离原则(InterfaceSegregation Principles)&lt;/h3&gt;

&lt;p&gt;这其实就是解决第一个原则中提出的问题，接口应该尽可能的小。&lt;/p&gt;

&lt;p&gt;你不能设计一个大的经理的接口，里面声明类各个部门的所有方法，而是应该分成多个接口，每一个接口再去声明各自的功能。甚至，你应该再去进一步细分，比如每个部门有一个总管，下面各个职员，负责各个细节。&lt;/p&gt;

&lt;h3 id=&quot;迪米特原则law-of-demeter-or-least-knowledge-principle&quot;&gt;迪米特原则(Law of Demeter or Least Knowledge Principle)&lt;/h3&gt;

&lt;p&gt;一个对象，应该对所依赖的对象有最少的了解。简单来说，你最好就不要了解，各个功能都在对方的类中实现，你只管调用这个函数就好了。&lt;/p&gt;

&lt;p&gt;比如，经理现在要市场部提供公司最大的客户的相关信息给他，市场部内有一个列表，保存了所有客户的信息。这时候，应该是市场部内部进行筛选拿到最大客户信息返给经理，而不是经理自己取出市场部的所有客户信息，自己遍历一遍拿出最大客户信息。&lt;/p&gt;

&lt;h1 id=&quot;怎么看呢&quot;&gt;怎么看呢&lt;/h1&gt;

&lt;p&gt;这些原则都是老生常谈了，今天我并不是为了再次介绍它们，而是想说说以前自己的困惑，自己的想法，但，只是自己的观点，谈不上对错。&lt;/p&gt;

&lt;h2 id=&quot;维护与实现&quot;&gt;维护与实现&lt;/h2&gt;

&lt;p&gt;这是我刚开始接触各种设计模式最大的困惑，我知道怎么去设计架构以符合设计模式，也知道，写出的代码，应该扩展性好，解耦好，健壮性好……可是，一味的去符合设计模式，导致的结果可能会是，代码可读性差，难以维护。这个可能有争论，实际上，这里讨论的是设计模式的使用的度的问题。&lt;/p&gt;

&lt;p&gt;比如，你大量的使用接口，那么，你在调试代码时，可能并不知道它到底是那一个子类实现的功能，你还需要按图索骥，一层层的去寻找调用赋值的位置，去寻找到实现的位置，然后再去分析有没有bug。&lt;/p&gt;

&lt;p&gt;比如，按照接口隔离原则，可能每一个功能，都要去单独设计一个接口，那么，不可避免的是，你将会分成很多很多类文件，这对于维护来说，也无疑是增加了很大难度。&lt;/p&gt;

&lt;p&gt;……&lt;/p&gt;

&lt;p&gt;所以，现在是一个如何适度的问题。到底是不是每一个功能都需要单独设计一个接口，到底是不是每一个地方都需要这么好的扩展性，都需要使用父类，接口，抽象类？&lt;/p&gt;

&lt;p&gt;程序员都知道，我们应该根据需求来说事。虽然从来都没遇到不变的需求，但是，好在大方向总是不变的，所以需求还是具有一定的参考性的。&lt;/p&gt;

&lt;p&gt;那么，根据需求，以及我们的经验，我觉得，模块化的东西，往往需要充分的解耦合，并且应该有好的扩展性。因为我们可能在很多地方使用，以及本项目之外；大而全的东西，可以牺牲这些特性，因为它们可重用的机会比较少，比如android的activity，ios的controller。&lt;/p&gt;

&lt;p&gt;总之，需要变化的地方，才是导致工程覆灭的潜在因素，我们的设计模式，我们的软件工程，针对的，应该是这些地方。&lt;/p&gt;</content><author><name>PfCStyle</name></author><category term="设计模式" /><summary type="html">面对正确的事物，我们往往无法确定它是正确的</summary></entry></feed>