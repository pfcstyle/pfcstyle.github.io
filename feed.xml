<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://pfcstyle.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pfcstyle.github.io/" rel="alternate" type="text/html" /><updated>2021-04-11T21:35:01+08:00</updated><id>https://pfcstyle.github.io/feed.xml</id><title type="html">01手记</title><subtitle>Will的个人手记</subtitle><author><name>Yawei Wang</name></author><entry><title type="html">Auto generate init for swift class and struct</title><link href="https://pfcstyle.github.io/2021/03/31/iOS-Swift-auto-generate-init/" rel="alternate" type="text/html" title="Auto generate init for swift class and struct" /><published>2021-03-31T00:00:00+08:00</published><updated>2021-03-31T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/31/iOS-Swift-auto-generate-init</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/31/iOS-Swift-auto-generate-init/">&lt;p&gt;鼠标放在class或者struct名称上，按住cmd+鼠标右键，选择&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generate Memberwise Initializer&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/post/2021-03-31/generate-init.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/post/2021-03-31/auto-genarate-init-result.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;</content><author><name>Yawei</name></author><category term="iOS" /><category term="swift" /><summary type="html">鼠标放在class或者struct名称上，按住cmd+鼠标右键，选择Generate Memberwise Initializer即可。</summary></entry><entry><title type="html">shell命令-chmod, chown, chgrp</title><link href="https://pfcstyle.github.io/2021/03/30/shell-chmod-chown-chgrp/" rel="alternate" type="text/html" title="shell命令-chmod, chown, chgrp" /><published>2021-03-30T00:00:00+08:00</published><updated>2021-03-30T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/30/shell-chmod-chown-chgrp</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/30/shell-chmod-chown-chgrp/">&lt;h1 id=&quot;chmod&quot;&gt;chmod&lt;/h1&gt;
&lt;p&gt;此命令用来更改某个文件对于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文件所有者&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;群组&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;其他人&lt;/code&gt;三种角色的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;读&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;写&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;执行&lt;/code&gt;权限。权限表示：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;r(Read，读取，权限值为4)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目 录的权限。
w(Write,写入，权限值为2)：对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。
x(eXecute，执行，权限值为1)：对文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;对于每一个角色，都包含rwx三种权限，如下表：
rwx rw- r–	764
rw- r– r–	644
rw- rw- r–	664&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 对单文件&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;777 test.out

&lt;span class=&quot;c&quot;&gt;# 对文件夹&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 764 ~/test/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;chown&quot;&gt;chown&lt;/h1&gt;
&lt;p&gt;此命令用来修改文件所属组或用户&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将test.out的owner改为yusi
chown yusi test.out
# 将test目录及其子目录（包括文件）的owner改为user, 把所属组改为users
chown -R user.users ~/test/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;chgrp&quot;&gt;chgrp&lt;/h1&gt;
&lt;p&gt;此命令专门更改所属组&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将 ~/test 和 /usr/local/bin两个文件目录的属组更改为users
chgrp -R users ~/test /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Yawei</name></author><category term="shell" /><category term="linux" /><summary type="html">chmod 此命令用来更改某个文件对于文件所有者, 群组和其他人三种角色的读, 写和执行权限。权限表示：</summary></entry><entry><title type="html">DSP-傅里叶变换-Z变换-拉普拉斯变换-小波变换-离散余弦变换-都干啥的</title><link href="https://pfcstyle.github.io/2021/03/29/DSP-FFT-ZT-LPLS-Small/" rel="alternate" type="text/html" title="DSP-傅里叶变换-Z变换-拉普拉斯变换-小波变换-离散余弦变换-都干啥的" /><published>2021-03-29T00:00:00+08:00</published><updated>2021-03-29T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/29/DSP-FFT-ZT-LPLS-Small</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/29/DSP-FFT-ZT-LPLS-Small/">&lt;p&gt;傅里叶变换是为了将信号从时域分解为频域&lt;/p&gt;

&lt;p&gt;Z变换是离散信号的傅里叶变换，为计算机处理信号而生&lt;/p&gt;

&lt;p&gt;拉普拉斯变换是因为傅里叶变换无法解决某些特殊波形，比如爆炸式增长的曲线（因为傅里叶变换是以正弦波拟合为基础，都是趴着的），才出现的。拉普拉斯基于傅里叶变换乘以一个衰减因子，让波形变为了可以傅里叶可以处理的波形。&lt;/p&gt;

&lt;p&gt;小波变换，傅里叶变换因为无法得知某一个频率是什么时候开始产生的，即在频域中没有时间信息。小波变换让傅里叶变换后的频域具备了时间信息，可以得知频率是什么时候添加进去的。&lt;/p&gt;

&lt;p&gt;离散余弦变换是离散傅里叶变换的一种特殊形式，当输入信号是实偶函数时，离散傅里叶变换公式可以简化为离散余弦变换。&lt;/p&gt;</content><author><name>Yawei</name></author><category term="DSP" /><summary type="html">傅里叶变换是为了将信号从时域分解为频域</summary></entry><entry><title type="html">DSP-FFT（快速傅里叶变换）使用解释</title><link href="https://pfcstyle.github.io/2021/03/25/DSP-FFT-Interpret/" rel="alternate" type="text/html" title="DSP-FFT（快速傅里叶变换）使用解释" /><published>2021-03-25T00:00:00+08:00</published><updated>2021-03-25T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/25/DSP-FFT-Interpret</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/25/DSP-FFT-Interpret/">&lt;blockquote&gt;
  &lt;p&gt;各种算法真是太多了，我只求怎么用，真的一点也不想知道其内部原理。很多文件把内部原理和理解说的很通透，但最后我却仍然不知道怎么用！很简单，告诉我这个函数的各个参数是什么，返回值都是啥意思就ok了，怎么就这么难？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;构造fft&quot;&gt;构造FFT&lt;/h1&gt;

&lt;p&gt;我们以iOS vDSP中&lt;a href=&quot;https://developer.apple.com/documentation/kernel/1579997-vdsp_fft_zrip?language=occ&quot;&gt;vDSP_fft_zrip&lt;/a&gt;为例，其第一个参数需要使用&lt;a href=&quot;https://developer.apple.com/documentation/kernel/1580009-vdsp_create_fftsetup?language=occ&quot;&gt;vDSP_create_fftsetup&lt;/a&gt;来构造设置选项。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;vDSP_fft_zrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;FFTSetup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__Setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DSPSplitComplex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vDSP_Stride&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__IC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vDSP_Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__Log2N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FFTDirection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__Direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;FFTSetup&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;vDSP_create_fftsetup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vDSP_Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__Log2n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FFTRadix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__Radix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，并不是所有DSP库都会提供fft的构建选项，很多都是内置了默认Radix为2，所以使用时，直接传入需要变换的信号即可，如python的scipy.fft(signal)。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vDSP_create_fftsetup&lt;/code&gt;使用解释：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;第一个参数：信号的最大长度，要求必须是2的n次方或2的n次方的倍数，比如radix3就是(3*2**Log2n)。实际信号的长度可以小于这个值, 但必须是2的n次方&lt;/li&gt;
  &lt;li&gt;第二个参数：fft的基数，基数越大，速度越快，但对硬件要求越高&lt;/li&gt;
  &lt;li&gt;返回值：这是一个用于在fft计算过程中使用的数据结构，它的构建效率比较低，因此建议初始化一次，多个fft共用，取最长的信号长度即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vDSP_fft_zrip&lt;/code&gt;使用解释：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;第一个参数：setup，参见上文&lt;/li&gt;
  &lt;li&gt;第二个参数：信号的复数形式表示，如何转换为复数，见下图，参照：https://developer.apple.com/documentation/accelerate/data_packing_for_fourier_transforms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/2021-03-25/complex.png&quot; alt=&quot;图1&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第三个参数：步长，就是从第二个参数(信号)每隔几个读取一次，交叉存储的数据结构，性能较低。所以一般都是顺序存储，步长为1。&lt;/li&gt;
  &lt;li&gt;第四个参数：信号长度&lt;/li&gt;
  &lt;li&gt;第五个参数：方向。正向(时域转频域)或反向(频域转时域)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输出：第二个参数为inout类型，因此输出也是存储在第二个参数中。输出的是频域的复数表示。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;fft输出解释：(这里的n为信号长度)
    &lt;ol&gt;
      &lt;li&gt;复数索引0，实部为DC(时域值的和)，虚部为0&lt;/li&gt;
      &lt;li&gt;复数索引从1到n/2, 包含频域值&lt;/li&gt;
      &lt;li&gt;复数索引n/2+1为Nyquist部分，实部为余弦分量系数，虚部为0&lt;/li&gt;
      &lt;li&gt;剩余的部分为第二部分的共轭（镜像）&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;vDSP_fft_zrip输出解释：(注意这里的n为信号长度的一半)
    &lt;ol&gt;
      &lt;li&gt;复数索引0，DC的虚部填上了Nyquist的实部&lt;/li&gt;
      &lt;li&gt;复数索引从1到n, 包含频域值
&lt;img src=&quot;/img/post/2021-03-25/output.png&quot; alt=&quot;图2&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;输出的使用：
    &lt;ol&gt;
      &lt;li&gt;频率=sqrt(real * real + imag * imag)&lt;/li&gt;
      &lt;li&gt;频谱宽度=(频率 * 采样率 / 2) / (n / 2)) = 频率 * 采样率 / n&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yawei</name></author><category term="DSP" /><category term="iOS" /><summary type="html">各种算法真是太多了，我只求怎么用，真的一点也不想知道其内部原理。很多文件把内部原理和理解说的很通透，但最后我却仍然不知道怎么用！很简单，告诉我这个函数的各个参数是什么，返回值都是啥意思就ok了，怎么就这么难？</summary></entry><entry><title type="html">WKWebview set user agent and JS handler</title><link href="https://pfcstyle.github.io/2021/03/24/iOS-webview-useragent/" rel="alternate" type="text/html" title="WKWebview set user agent and JS handler" /><published>2021-03-24T00:00:00+08:00</published><updated>2021-03-24T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/24/iOS-webview-useragent</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/24/iOS-webview-useragent/">&lt;blockquote&gt;
  &lt;p&gt;注意，下面的代码都不要在webview init中写，不会生效，需要在view did load之后才生效&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;直接上代码&lt;/p&gt;

&lt;h1 id=&quot;设置js-handler&quot;&gt;设置JS Handler&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;// 防止循环应用
class LeakAvoider: NSObject {
    weak var delegate: WKScriptMessageHandler?

    init(delegate: WKScriptMessageHandler) {
        super.init()
        self.delegate = delegate
    }
}

extension LeakAvoider: WKScriptMessageHandler {
    func userContentController(_ userContentController: WKUserContentController, didReceive message: WKScriptMessage) {
        delegate?.userContentController(userContentController, didReceive: message)
    }
}

// 我这里继承的WKWebview, delegate的实现也可以放view controller
extension SparkPageWebView: WKScriptMessageHandler{
    public func userContentController(_ userContentController: WKUserContentController, didReceive message: WKScriptMessage) {
        // message.body.type
    }
}

// 最后为webview设置代理, 注意要在view did load之后设置才会生效
self.configuration.userContentController.add(LeakAvoider(delegate: self), name: &quot;xxx&quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;设置user-agent&quot;&gt;设置user agent&lt;/h1&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;customUserAgent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Custom_User_Agent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Yawei</name></author><category term="iOS" /><summary type="html">注意，下面的代码都不要在webview init中写，不会生效，需要在view did load之后才生效</summary></entry><entry><title type="html">kubernetes 问题汇总</title><link href="https://pfcstyle.github.io/2021/03/23/kubernetes-problem-collection/" rel="alternate" type="text/html" title="kubernetes 问题汇总" /><published>2021-03-23T00:00:00+08:00</published><updated>2021-03-23T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/23/kubernetes-problem-collection</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/23/kubernetes-problem-collection/">&lt;h1 id=&quot;突然所有服务无法访问&quot;&gt;突然所有服务无法访问&lt;/h1&gt;
&lt;p&gt;因为是使用的公司虚拟机集群搭建的k8s集群，发现公司虚拟机即使配置了静态ip，仍然会发生改变！所以重新apply一下静态ip配置，恢复原ip即可。&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ubuntu18&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netplan apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Yawei</name></author><category term="kubernetes" /><summary type="html">突然所有服务无法访问 因为是使用的公司虚拟机集群搭建的k8s集群，发现公司虚拟机即使配置了静态ip，仍然会发生改变！所以重新apply一下静态ip配置，恢复原ip即可。 # ubuntu18 sudo netplan apply</summary></entry><entry><title type="html">Apologizing</title><link href="https://pfcstyle.github.io/2021/03/23/manner/" rel="alternate" type="text/html" title="Apologizing" /><published>2021-03-23T00:00:00+08:00</published><updated>2021-03-23T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/23/manner</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/23/manner/">&lt;h1 id=&quot;key-gramma&quot;&gt;Key gramma&lt;/h1&gt;

&lt;p&gt;No spliting
No smoking
Shouldn’t throw litter about
Shouldn’t split in public places or throw litter about&lt;/p&gt;

&lt;p&gt;Cover mouth when you want to sneeze&lt;/p&gt;

&lt;p&gt;With people I have dinner with.&lt;/p&gt;

&lt;p&gt;It will make me feel&lt;/p&gt;

&lt;p&gt;You should consider your partner’s feelings.&lt;/p&gt;

&lt;p&gt;When someone wants to enter you room, he has to knock at the door.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&lt;/strong&gt;(not how) do you think of her behaviour.&lt;/p&gt;

&lt;p&gt;If I were you, I wouldn’t have done that.&lt;/p&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Key gramma</summary></entry><entry><title type="html">Apologizing</title><link href="https://pfcstyle.github.io/2021/03/21/Apologizing/" rel="alternate" type="text/html" title="Apologizing" /><published>2021-03-21T00:00:00+08:00</published><updated>2021-03-21T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/21/Apologizing</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/21/Apologizing/">&lt;h1 id=&quot;key-phrases-for-apologize&quot;&gt;Key phrases for apologize&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;I’m awfully sorry for the terrible.&lt;/li&gt;
  &lt;li&gt;I do regret making irated&lt;/li&gt;
  &lt;li&gt;I terribly sorry for ….&lt;/li&gt;
  &lt;li&gt;I shouldn’t have treated you like this.&lt;/li&gt;
  &lt;li&gt;I’m so sorry&lt;/li&gt;
  &lt;li&gt;I should have taken (this) into consideration.&lt;/li&gt;
  &lt;li&gt;I’m so sorry, that was not intentional&lt;/li&gt;
  &lt;li&gt;I didn’t intend to do that.&lt;/li&gt;
  &lt;li&gt;My apologies&lt;/li&gt;
  &lt;li&gt;I didn’t realize what I was doing;&lt;/li&gt;
  &lt;li&gt;Look, I know it was wrong of me to be like that;&lt;/li&gt;
  &lt;li&gt;I guess I could’ve done (more to support you in front of the boss);&lt;/li&gt;
  &lt;li&gt;Would you please forgive me?;&lt;/li&gt;
  &lt;li&gt;I promise I’ll make it up to you.&lt;/li&gt;
  &lt;li&gt;I guess I could have been (more aware of what I was saying.)&lt;/li&gt;
  &lt;li&gt;I shouldn’t say that in public.&lt;/li&gt;
  &lt;li&gt;Can we talk about this in private.&lt;/li&gt;
  &lt;li&gt;Do this in a more graceful way.&lt;/li&gt;
  &lt;li&gt;I just did that on impulse.&lt;/li&gt;
  &lt;li&gt;It’s not JUST your responsibility.&lt;/li&gt;
  &lt;li&gt;I didn’t mean to say something bad ABOUT you.&lt;/li&gt;
  &lt;li&gt;I realize that I shouldn’t HAVE said those things in public.&lt;/li&gt;
  &lt;li&gt;Thank you for your forgiveness&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;for-presenting-angry&quot;&gt;For presenting angry&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;You really EMBARRASED ME in the meeting.&lt;/li&gt;
  &lt;li&gt;The made me so irrated&lt;/li&gt;
  &lt;li&gt;I don’t think you TOOK me into consideration at all.&lt;/li&gt;
  &lt;li&gt;I really don’t want to experience such a situation again&lt;/li&gt;
  &lt;li&gt;it made the design look so RIDICULOUS&lt;/li&gt;
  &lt;li&gt;You made me look so bad&lt;/li&gt;
  &lt;li&gt;You really shouldn’t say that in public&lt;/li&gt;
  &lt;li&gt;You made me feel so stupid&lt;/li&gt;
  &lt;li&gt;You have MADE ME LOSE FACE with everyone&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Key phrases for apologize</summary></entry><entry><title type="html">-[** copyWithZone:] unrecognized selector sent to instance</title><link href="https://pfcstyle.github.io/2021/03/20/iOS-swift-nscopy/" rel="alternate" type="text/html" title="-[** copyWithZone:] unrecognized selector sent to instance" /><published>2021-03-20T00:00:00+08:00</published><updated>2021-03-20T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/20/iOS-swift-nscopy</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/20/iOS-swift-nscopy/">&lt;p&gt;很多OC的class, 内部属性声明使用的@property (nonatomic, &lt;strong&gt;copy&lt;/strong&gt;),导致在赋值使用时，自动调用copyWithZone:方法，如果这时传入的对象没有实现这个方法，就会报找不到的错误。&lt;/p&gt;

&lt;h1 id=&quot;解决方法&quot;&gt;解决方法&lt;/h1&gt;

&lt;h2 id=&quot;第一种方法实现copywithzone&quot;&gt;第一种方法：实现copyWithZone&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class SparkAppService: NSCopying{
    var vendorId: NSCopying
    func copy(with zone: NSZone? = nil) -&amp;gt; Any {
        let c = SparkAppService()
        c.vendorId = self.vendorId.copy(with: zone) as! NSCopying
        return c
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;第二种方法继承nsobject&quot;&gt;第二种方法：继承NSObject&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@objc class SparkAppService: NSObject{
    override init() {
        super.init()
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Yawei</name></author><category term="iOS" /><summary type="html">很多OC的class, 内部属性声明使用的@property (nonatomic, copy),导致在赋值使用时，自动调用copyWithZone:方法，如果这时传入的对象没有实现这个方法，就会报找不到的错误。</summary></entry><entry><title type="html">Changing the topic</title><link href="https://pfcstyle.github.io/2021/03/19/changing-the-topic/" rel="alternate" type="text/html" title="Changing the topic" /><published>2021-03-19T00:00:00+08:00</published><updated>2021-03-19T00:00:00+08:00</updated><id>https://pfcstyle.github.io/2021/03/19/changing-the-topic</id><content type="html" xml:base="https://pfcstyle.github.io/2021/03/19/changing-the-topic/">&lt;h1 id=&quot;dialogue&quot;&gt;Dialogue&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Jonathan: It was a nice day today, wasn’t it?&lt;/li&gt;
  &lt;li&gt;Linda: Yes, it really was. I love these sunny spring days.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Which reminds me&lt;/strong&gt;: if it’s like this tomorrow, I’m going to go to the beach.&lt;/li&gt;
  &lt;li&gt;Jonathan: Oh, you like the beach?&lt;/li&gt;
  &lt;li&gt;I love the beach!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Did I tell you&lt;/strong&gt;?- I took surfing lessons a couple of years ago.&lt;/li&gt;
  &lt;li&gt;I can’t wait to get back out there!&lt;/li&gt;
  &lt;li&gt;Linda: Wow, I could never go surfing.&lt;/li&gt;
  &lt;li&gt;I really admire anyone for doing something so exciting and risky.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The most dangerous thing I ever do is&lt;/strong&gt; ride a bike in the city.&lt;/li&gt;
  &lt;li&gt;Jonathan: Well, I would be scared to do that with all the crazy drivers around.&lt;/li&gt;
  &lt;li&gt;Linda: I know exactly what you mean- there are some crazy drivers out there.&lt;/li&gt;
  &lt;li&gt;Jonathan: &lt;strong&gt;Speaking of which&lt;/strong&gt;, have you noticed how much more traffic there is lately?&lt;/li&gt;
  &lt;li&gt;I remember when the streets used to be so quiet and peaceful.&lt;/li&gt;
  &lt;li&gt;It was much more romantic here a couple of years ago.&lt;/li&gt;
  &lt;li&gt;Linda: I feel exactly the same way!&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yawei</name></author><category term="English" /><summary type="html">Dialogue Jonathan: It was a nice day today, wasn’t it? Linda: Yes, it really was. I love these sunny spring days. Which reminds me: if it’s like this tomorrow, I’m going to go to the beach. Jonathan: Oh, you like the beach? I love the beach! Did I tell you?- I took surfing lessons a couple of years ago. I can’t wait to get back out there! Linda: Wow, I could never go surfing. I really admire anyone for doing something so exciting and risky. The most dangerous thing I ever do is ride a bike in the city. Jonathan: Well, I would be scared to do that with all the crazy drivers around. Linda: I know exactly what you mean- there are some crazy drivers out there. Jonathan: Speaking of which, have you noticed how much more traffic there is lately? I remember when the streets used to be so quiet and peaceful. It was much more romantic here a couple of years ago. Linda: I feel exactly the same way!</summary></entry></feed>